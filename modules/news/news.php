<?php

/**
 * NOTICE OF LICENSE
 *
 * Do not edit this file
 *
 * ---------------------------------------------------
 *  @author     : Ebyyd <suport@ebyyd.com>
 *  @copyright  : 2010-2013 Ebyyd.com
 *  @version    : 2.2.9
 *  @license    : Comercial License
 * ---------------------------------------------------
 *
 *  created: 2012-11-15 | Updated: 2013-11-25
 *
 *  
 */
if (!defined('_PS_VERSION_'))
    exit;

class News extends Module {

    private $_minVersion = '1.5.5';
    private $_html = ''; // cache html
    protected $error = false;
    private $_imageType = 'jpg'; // image type
    private $_maxImageSize = 2000000; // default max image size 2M
    private $_imagesSizes ;
    public static $moduleRoutes =array(

             'module-news-list' => array(
                    'controller' => 'list',
                    'rule' =>  'news/list/{cat_news}-{page_cat}/{rewrite}.html',
                  'keywords' => array(
                        'page_cat'   => array('regexp' => '[0-9]*',   'param' => 'page_cat'),
                        'rewrite'   => array('regexp' => '[_a-zA-Z0-9-\pL]*',   'param' => 'rewrite'),
                        'cat_news'  => array('regexp' => '[0-9]*', 'param' => 'cat_news')
                    ),
                    'params' => array(
			            'fc' => 'module',
                        'module' => 'news',
                        'controller' => 'list'
                    )
                ),
       
                'module-news-news' => array(
                    'controller' => 'news',
                    'rule' =>  'news/news.html',
                    'keywords' => array(
				'module' =>			array('regexp' => '[_a-zA-Z0-9_-]+', 'param' => 'module'),
				'controller' =>		array('regexp' => '[_a-zA-Z0-9_-]+', 'param' => 'controller') ),
                    'params' => array(
			'fc' => 'module',
                        'module' => 'news',
                        'controller' => 'news'
                    )
                ), 
                'module-news-rss' => array(
                    'controller' => 'rss',
                    'rule' =>  'news/{rss_news}/rss.html',
                     'keywords' => array(
				'rss_news' =>			array('regexp' => '[0-9]*', 'param' => 'rss_news')
                            ),
                    'params' => array(
			'fc' => 'module',
                        'module' => 'news',
                        'controller' => 'rss'
                    )
                ), 
       
                'module-news-new' => array(
                    'controller' => 'new',
                    'rule' =>  'news/new/{id_news}-{cat_news}-{page_cat}/{cat_rewrite}/{rewrite}.html',
                    'keywords' => array(
                        'id_news'   => array('regexp' => '[0-9]+',   'param' => 'id_news'),
                        'cat_news'  => array('regexp' => '[0-9]*',   'param' => 'cat_news'),
                        'cat_rewrite'  => array('regexp' => '[_a-zA-Z0-9-\pL]*', 'param' => 'cat_rewrite'),
                        'page_cat'      => array('regexp' => '[0-9]*',   'param' => 'page_cat'),
                        'rewrite'   => array('regexp' => '[_a-zA-Z0-9-\pL]*',   'param' => 'rewrite'),
                    ),
                    'params' => array(
				'fc' => 'module',
                        'module' => 'news',
                        'controller' => 'new'
                    )
                )

    );
    public $_months; // months translates

    /*
     *
     *
     *
     *
     *
     */

    public function __construct() {


        $this->name = 'news';
        $this->tab = 'front_office_features';
        $this->version = '2.2.9';
        $this->author = 'Ebyyd.com';
        $this->module_key = "823a8a635613569fc24d54d1946b9b27";
        parent::__construct();

        $this->page = basename(__FILE__, '.php');
        $this->path_to_module = _PS_ROOT_DIR_ . '/modules/' . $this->name;
        $this->url_to_module = (Tools::usingSecureMode() ? 'https://' : 'http://') . htmlspecialchars($_SERVER['HTTP_HOST'], ENT_COMPAT, 'UTF-8') . __PS_BASE_URI__ . 'modules/' . $this->name;

        $this->displayName = $this->l('News Module');
        $this->description = $this->l('News, Articles, Blog Module');
        $this->confirmUninstall = $this->l('Are you sure that you want to delete your details? All articles will be DELETED!');

        // LOAD VARS 
        include(dirname(__FILE__) . '/lib/vars.php');
        $this->_months = $_months;
       // $this->moduleRoutes = $_moduleRoutes;
        $this->_imagesSizes = $_imagesSizes;
        

        $this->_maxImageSize = Configuration::get('PS_LIMIT_UPLOAD_IMAGE_VALUE') ? (Configuration::get('PS_LIMIT_UPLOAD_IMAGE_VALUE') * 1000000) : $this->_maxImageSize;

        if ( trim(substr(_PS_VERSION_, 0, 5)) < $this->_minVersion ) {
            $this->warning = $this->l("  Your PrestaShop version is [" . _PS_VERSION_ . "], this module is for version [{$this->_minVersion}.x] or higher , may not work correctly ");
        }
		
		//Configuration::updateValue('NEWS_SLIDESHOW_WIDTH', 1170);
        //Configuration::updateValue('NEWS_SLIDESHOW_HEIGHT', 346); 
		
    }

    /*
     *
     *
     *
     *
     *
     */

    public function install() {

        if (!file_exists(_PS_THEME_DIR_ . 'modules')) {
            @mkdir(_PS_THEME_DIR_ . 'modules', 0755);
        }
        if (!file_exists(_PS_THEME_DIR_ . 'modules/' . $this->name)) {
            @mkdir(_PS_THEME_DIR_ . 'modules/' . $this->name, 0755);
        }
        @copy(_PS_ROOT_DIR_ . '/modules/' . $this->name . '/install/index.tpl', _PS_THEME_DIR_ . 'modules/' . $this->name . '/index.tpl');
        if (!file_exists(_PS_THEME_DIR_ . 'modules/' . $this->name . '/index.tpl')) {

            $this->displayErrorInstall($this->l("Installation ERROR: <br>the folder ") .
                    ' [' . _PS_THEME_DIR_ . 'modules/' . $this->name . ']<br>  ' .
                    $this->l(" must have permissions to write (755) OR copy the file in :<br>") . _PS_ROOT_DIR_ . 'modules/' . $this->name . '/index.tpl' .
                    $this->l('<br> to folder <br>') . _PS_THEME_DIR_ . 'modules/' . $this->name . '/<br>
                                                       <a target="_blank" href="../modules/' . $this->name . '/manual/Manual_EN.pdf">' .
                    $this->l(' <b>Download Manual and find where the solution for this problem<b>') .
                    '</a>');
            return false;
        }




        // Install SQL
        include(dirname(__FILE__) . '/install/sql-install.php');
        foreach ($sql as $key => $query) {
            if (!Db::getInstance()->Execute($query)) {
                $this->displayErrorInstall('Installation ERROR : Can\'t create table,
                  table exists or you do not have permission : `' . _DB_PREFIX_ . $key . '` <br>
						   <a target="_blank" href="../modules/' . $this->name . '/manual/Manual_EN.pdf">
                               <b>Download Manual and find where the solution for this problem or contact support<b>
                           </a>');
                return false;
            }
        }


        // Configuration and hooks
        if (!parent::install() OR 
            !Configuration::updateValue('NEWS_N_LIST_SIDES', 3) OR 
            !Configuration::updateValue('NEWS_SIDE_CATEGORIES', 1) OR 
                !Configuration::updateValue('NEWS_N_PAGE', 5) OR 
                !Configuration::updateValue('NEWS_AJAXPAGER', 1) OR 
                !Configuration::updateValue('NEWS_RSS_N', 10) OR 
                !Configuration::updateValue('NEWS_REL', 10) OR 
                !Configuration::updateValue('NEWS_REL_PRODUCTS', 1) OR 
                !Configuration::updateValue('NEWS_N_HOME', 6) OR 
                !Configuration::updateValue('NEWS_SOCIAL_BUTTONS', 'a:7:{i:0;i:1;i:1;i:1;i:2;i:1;i:3;i:1;i:4;i:1;i:5;i:1;i:6;i:1;}') OR 
                !Configuration::updateValue('NEWS_SOCIAL_BUTTON_HTML', '') OR
                !Configuration::updateValue('NEWS_FB_COMMENTS', 0) OR 
                !Configuration::updateValue('NEWS_WIDTH', 556) OR
                !Configuration::updateValue('NEWS_FB_COMMENTS_LANGS', 'a:0:{}') OR
                !Configuration::updateValue('NEWS_THEME', 1) OR 
                !Configuration::updateValue('NEWS_THEME', 1) OR
                !Configuration::updateValue('NEWS_SLIDESHOW_WIDTH', 1170) OR
                !Configuration::updateValue('NEWS_SLIDESHOW_HEIGHT', 346) OR 
                $this->registerHook('moduleRoutes') == false OR
                $this->registerHook('news') == false OR
                $this->registerHook('top') == false OR 
                $this->registerHook('leftColumn') == false OR 
                $this->registerHook('header') == false OR 
                $this->registerHook('home') == false OR 
				 $this->registerHook('displayMatBlog') == false OR 
                $this->registerHook('backOfficeHeader') == false
        ) {
            return false;
        }

        // INSTALL OK
        return true;
    }
	
	public function hookdisplayMatBlog($params)
	{
		return $this->hookHome($params);
	}

    /*
     *
     *
     *
     *
     *
     */

    public function uninstall() {
        if (parent::uninstall()) {
            $news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('SELECT id_news FROM ' . _DB_PREFIX_ . 'news  ');

            if ($news) {
                foreach ($news AS $new) {
                    $this->deleteNews((int) ($new['id_news']));
                }
            }
            $news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('SELECT id_img FROM ' . _DB_PREFIX_ . 'news_imgs  ');

            if ($news) {
                foreach ($news AS $new) {
                    $this->image_delete_arq((int) ($new['id_img']), 0, 1);
                }
            }


            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_cats`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_cats_lang`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_cats_rel`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_imgs`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_imgs_rel`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_langs`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_products`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_rel`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_tag_lang`");
            Db::getInstance()->Execute("DROP TABLE  `" . _DB_PREFIX_ . "news_tag_rel`");
        }

        return parent::uninstall();
    }

    /*
     *
     *
     *
     *
     *
     */

    public function hookmoduleRoutes() {
        return self::$moduleRoutes;
    }

    /*
     *
     *
     *
     *
     *
     */

    public function getContent() {

        if (isset($_POST['submitUpdateNews'])) {
            $this->updateNews(intval($_REQUEST['id_new']));
        } else if (isset($_POST['submitUpdateConfigurationsNews'])) {
            $this->updateConfigurationsNews();
        } elseif (isset($_REQUEST['news_delete']) || isset($_REQUEST['news_active']) || isset($_REQUEST['up']) || isset($_REQUEST['down'])) {

            if (isset($_REQUEST['up'])) {
                $this->up($_REQUEST['pos']);
            }

            if (isset($_REQUEST['down'])) {
                $this->down($_REQUEST['pos']);
            }

            if (isset($_REQUEST['news_active']) && intval($_REQUEST['id_news']) > 0) {
                $this->active(intval($_REQUEST['news_active']), intval($_REQUEST['id_news']));
            }

            if (isset($_REQUEST['news_delete']) && intval($_REQUEST['id_news']) > 0) {
                $this->deleteNews(intval($_REQUEST['id_news']));
            }
        } elseif (isset($_REQUEST['delete_draft'])) {
            $this->deleteDraft(intval($_REQUEST['delete_draft']));
        }


        if (isset($_GET['formNews'])) {
            $this->displayFormNews();
        } else if (isset($_GET['configurations'])) {
            $this->displayFormConfigurationsNews();
        } else if (isset($_REQUEST['news_add']) || isset($_REQUEST['news_edit'])) {
            $this->displayFormAddEditNews();
        } else if (!isset($_REQUEST['news_edit']) && !isset($_REQUEST['news_add'])) {
            $this->displayInfo();
            $this->displayFormTopMenu();
            $this->displayFormNews();
        }



        return $this->_html;
    }

    /*
     *
     *
     *
     *
     *
     */

    public function msg_ok($msn = '') {
        $this->_html .= '
                            <div class="conf confirm">
                                    ' . ($msn ? $msn : $this->l('Successfully updated')) . '
                            </div>';
    }

    /*
     *
     *
     *
     *
     *
     */

    public function displayErrorInstall($error) {
        echo '<br><br>
                    <div class="alert error">
                        <ol>
                            <li>' . $error . '</li>
                        </ol>
                    </div>
                    <br><br>
                    ';
        exit;
    }

    // HOOKS -----------------------------------------


    public function hookHeader($params) {

        global $link, $smarty;


        if (Tools::getValue('rss_news')) {
            $this->rss($params);
            exit;
        }

        if (Tools::getValue('ajaxnewslist')) {
            header('Content-Type: text/html; charset=utf-8');
            echo $this->hookNews($params);
            exit;
        }

        // CSS
        $this->context->controller->addCSS(($this->_path) . 'css/news.css', 'all');
        $this->context->controller->addCSS(($this->_path) . 'js/lightbox/css/jquery.lightbox-0.5.css', 'all');
        $this->context->controller->addCSS(($this->_path) . 'js/jquery/themes/base/jquery.ui.core.css', 'all');
        $this->context->controller->addCSS(($this->_path) . 'js/jquery/themes/base/jquery.ui.tabs.css', 'all');
        $this->context->controller->addCSS(($this->_path) . 'js/jquery/themes/base/jquery.ui.theme.css', 'all');
        if (Tools::getValue('id_news')) {
            $this->context->controller->addCSS(($this->_path) . 'tpl/themes/' . Configuration::get('NEWS_THEME') . '/news.css', 'all');
        }


        // JS
        $this->context->controller->addJS(($this->_path) . 'js/jquery-1.7.2.min.js', 'all');
        $this->context->controller->addJS(($this->_path) . 'js/news.js', 'all');
        $this->context->controller->addJS(($this->_path) . 'js/lightbox/js/jquery.lightbox-0.5.min.js', 'all');
        $this->context->controller->addJS(($this->_path) . 'js/cycle/jquery.cycle.all.js', 'all');
        $this->context->controller->addJS(($this->_path) . 'js/cycle/jquery.easing.1.3.js', 'all');
		
		if(in_array($this->page_name, array('product')))
			$this->context->controller->addJS(($this->_path) . 'js/jquery/ui/jquery.ui.widget.js', 'all');

        if (!Tools::getValue('live_edit')) {
            $this->context->controller->addJS(($this->_path) . 'js/jquery/ui/jquery.ui.tabs.js', 'all');
        }

        if (Tools::getValue('cat_news') || Tools::getValue('id_news')) {
            if (Tools::getValue('id_news')) {
                $id_lang = (int) ($params['cookie']->id_lang);
                $trads = $this->getTranslations(intval(Tools::getValue('id_news')));
                $new_meta_title = ' > ' . (isset($trads[$id_lang]['title']) ? $trads[$id_lang]['title'] : '');
                $new_meta_description = (isset($trads[$id_lang]['description']) ? $trads[$id_lang]['description'] : $new_meta_title);
                $new_meta_keywords = (isset($trads[$id_lang]['keywords']) ? $trads[$id_lang]['keywords'] : $new_meta_description);
            } else {
                $new_meta_title = '';
                $new_meta_description = '';
                $new_meta_keywords = '';
            }

            $smarty->assign(array('meta_title' => $this->l('News') . $new_meta_title));
            if ($new_meta_description) {
                $smarty->assign('meta_description', $new_meta_description);
            }
            if ($new_meta_keywords) {
                $smarty->assign('meta_keywords', $new_meta_keywords);
            }
        }

        $this->smarty->assign(array(
            'meta_title_rss' => $this->l('RSS News'),
            'feedUrl' => $this->context->link->getPageLink('index', true, NULL, "rss_news=1")
        ));

        return $this->display(__FILE__, 'tpl/news_rss_header.tpl');
    }

    /*
     *
     *
     *
     *
     *
     */

    public function hookLeftColumn($params) {

        global $link, $cookie;

        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        $id_lang = (int) ($params['cookie']->id_lang);

        $news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
			SELECT id_news FROM ' . _DB_PREFIX_ . 'news  WHERE active ="1"
                AND id_news IN ( SELECT id_news FROM ' . _DB_PREFIX_ . 'news_langs WHERE id_lang=' . $id_lang . ' )
            ORDER by pos ASC LIMIT ' . ((int) Configuration::get('NEWS_N_LIST_SIDES') + 1) . ' ');


        if (!$news) {
            return false;
        }
        $newsObj = array();
        if ($news) {
            foreach ($news AS $new) {
                $obj = (object) 'News';
                $obj->id_news = (int) ($new['id_news']);
                $trads = $this->getTranslations((int) ($new['id_news']));
                $obj->title = $trads[$id_lang]['title'];
                $obj->rewrite = Tools::str2url($trads[$id_lang]['title']);
                $obj->img = '';
                // get images
                $img = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                    SELECT a.id_img  FROM ' . _DB_PREFIX_ . 'news_imgs a
                        LEFT JOIN `' . _DB_PREFIX_ . 'news_imgs_rel` b ON (a.`id_img` = b.`id_img`)
                    WHERE a.id_img IN ( SELECT id_img FROM ' . _DB_PREFIX_ . 'news_imgs_rel WHERE
                                              id_news = ' . (int) ($new['id_news']) . ' ORDER BY pos DESC)
                   ORDER BY b.pos ASC LIMIT 1 ;  ');

                if (isset($img[0]['id_img'])) {
                    if (intval($img[0]['id_img']) > 0) {
                        if (file_exists($this->path_to_module . '/imgs/' . $img[0]['id_img'] . '-sides.' . $this->_imageType)) {
                            $obj->img = $this->url_to_module . '/imgs/' . $img[0]['id_img'] . '-sides.' . $this->_imageType;
                        }
                    }
                }
                $newsObj[] = $obj;
            }
        }

        // remove the last
        if (count($news) > intval(Configuration::get('NEWS_N_LIST_SIDES'))) {
            unset($newsObj[(count($news) - 1)]);
        }

        $this->smarty->assign(array(
            'newsObj' => $newsObj,
            'catsObj' => (Configuration::get('NEWS_SIDE_CATEGORIES') == '1' ? $this->getCats(0, $id_lang) : array()),
            'newsSideMore' => (count($news) > ((int) Configuration::get('NEWS_N_LIST_SIDES')) ? true : false)
        ));

        return $this->display(__FILE__, 'tpl/news_sides.tpl');
    }

    /*
     *
     *
     *
     *
     *
     */

    public function hookRightColumn($params) {
        return $this->hookLeftColumn($params);
    }

    /*
     *
     *
     *
     *
     *
     */

    public function hookNews($params) {
        
        global $cookie;

        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        $id_lang = (int) ($params['cookie']->id_lang);

        $page = intval(Tools::getValue('page_cat'));
        $tag = intval(Tools::getValue('tag_news'));
        $cat = intval(Tools::getValue('cat_news'));
        $search_news = trim(Tools::getValue('search_news'));


        $n_per_page = (int) Configuration::get('NEWS_N_PAGE');
        $search_news = str_replace('%', '\\%', $search_news);
        $search_news = str_replace('_', '\\_', $search_news);

        if ($cat > 0) {
            $extraQuery = ' AND id_news IN (
                           SELECT DISTINCT(id_new) AS id_news FROM ' . _DB_PREFIX_ . 'news_cats_rel  WHERE id_cat ="' . $cat . '" ) ';
        } else if ($tag > 0) {
            $extraQuery = ' AND id_news IN (
                           SELECT DISTINCT(id_new) AS id_news FROM ' . _DB_PREFIX_ . 'news_tag_rel  WHERE id_tag ="' . $tag . '" ) ';
        } else if (strlen(str_replace(' ', '', $search_news)) <= 2) {

            $extraQuery = ' AND id_news IN ( SELECT id_news FROM ' . _DB_PREFIX_ . 'news_langs WHERE id_lang=' . $id_lang . ' ) ';
        } else {
            $extraQuery = ' AND id_news IN (
                           SELECT id_news FROM ' . _DB_PREFIX_ . 'news_langs  WHERE (title like "%' . Search::sanitize($search_news, (int) $id_lang) . '%"
                           OR new like "%' . Search::sanitize($search_news, (int) $id_lang) . '%")  AND
                            id_lang = ' . (int) ($params['cookie']->id_lang) . ' )';
        }


        // article page
        if (intval(Tools::getValue('id_news')) > 0) {
            return $this->newsItem($params);
        }

        // list articles
        $news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
			SELECT * FROM ' . _DB_PREFIX_ . 'news  WHERE
                 active="1" ' . $extraQuery . '
            ORDER by pos ASC LIMIT ' . (($n_per_page * $page)) . ',' . $n_per_page . ' ');
		
		echo "<pre>"; print_r($news); echo "</pre>";
        
		$total_news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
			SELECT count(id_news) AS total  FROM ' . _DB_PREFIX_ . 'news  WHERE
                active="1" ' . $extraQuery . ' ');
        $total_news = intval($total_news[0]['total']);
		
        $newsObj = array();
        if ($news) {
            foreach ($news AS $new) {
                $obj = (object) 'News';
                $obj->id_news = (int) ($new['id_news']);
                $trads = $this->getTranslations((int) ($new['id_news']));
                $obj->title = $trads[$id_lang]['title'];
                $obj->rewrite = Tools::str2url($trads[$id_lang]['title']);
				$obj->cat_name = $this->getCatName((int) ($catObj->id), $id_lang);
                $obj->autor = $new['autor']; 
				/*
				$date['year'] = date('Y',$new['date']);
				$date['month'] = date('M',$new['date']);
				$date['day'] = date('d',$new['date']);
						
				$obj->date = '<span>'.$date['day'].'</span><p>'.$date['month'].'</p><p>'.$date['year'].'</p>';
				*/
				
                $obj->date = ($new['date'] != 0 ? ( $this->_months[date('n', $new['date'])] . ' ' . date('j', $new['date']) . ', ' . date('Y', $new['date']) ) : '');
                $obj->new = strip_tags($trads[$id_lang]['new']);
                $obj->img = '';
                // get images
                $img = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                    SELECT a.id_img  FROM ' . _DB_PREFIX_ . 'news_imgs a
                        LEFT JOIN `' . _DB_PREFIX_ . 'news_imgs_rel` b ON (a.`id_img` = b.`id_img`)
                    WHERE a.id_img IN ( SELECT id_img FROM ' . _DB_PREFIX_ . 'news_imgs_rel WHERE
                                              id_news = ' . (int) ($new['id_news']) . ' ORDER BY pos DESC)
                    ORDER BY b.pos ASC LIMIT 1 ;  ');

                if (isset($img[0]['id_img'])) {
                    if (intval($img[0]['id_img']) > 0) {
                        if (file_exists($this->path_to_module . '/imgs/' . $img[0]['id_img'] . '-list.' . $this->_imageType)) {
                            $obj->img = $this->url_to_module . '/imgs/' . $img[0]['id_img'] . '-list.' . $this->_imageType;
                        }
                    }
                }
                $newsObj[] = $obj;
            }
        }

        // remove the last
        if (count($news) > $n_per_page) {
            unset($newsObj[(count($news) - 1)]);
        }
        $this->smarty->assign(array(
            'newsObj' => $newsObj,
            'catsObj' => $this->getCats(0, $id_lang),
            'notFoundResults' => (intval($total_news) == '0' ? true : false),
            'ajax' => (Tools::getValue('ajaxnewslist') ? true : false),
            'pages' => intval(($total_news - 1) / $n_per_page),
            'start' => (($page + 1) > 5 ? (($page + 1) - 2) : 1),
            'stop' => (($page + 1) > 5 && ((intval(($total_news - 1) / $n_per_page) + 1) < (($page + 1) - 2)) ? (($page + 1) + 2) : ((intval(($total_news - 1) / $n_per_page) + 1) > 1 ? (intval(($total_news - 1) / $n_per_page) + 1) : 0) ),
            'ajaxPager' => (((int) Configuration::get('NEWS_AJAXPAGER') == 1) ? true : false),
            'pager' => (intval(($total_news + 1) / $n_per_page) >= 1 ? true : false),
            'showPagerAjax' => ( intval((($total_news - 1) / $n_per_page) + 1) == ($page + 1) ? false : true),
            'search_news' => $search_news,
            'tag' => $tag,
            'cat' => $cat,
            'cat_rewrite' => $this->getCatRewrite($cat, $id_lang),
            'page' => $page
        ));

        return $this->display(__FILE__, 'tpl/news_list.tpl');
    }

    /*
     *
     *
     *
     *
     */

    public function hookHome($params) {

        if (intval(Configuration::get('NEWS_N_HOME')) <= 0) {
            return 'dre';
        }

        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        $id_lang = (int) ($params['cookie']->id_lang);
        $cats_list = $this->getCats(0, $id_lang);

        $count = 0;
        $catsProducts = Array();
        if ($cats_list) {
            foreach ($cats_list AS $catObj) {
                $news = Array();
                $newsObj = Array();
                $news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
			SELECT * FROM ' . _DB_PREFIX_ . 'news  WHERE active ="1"
                AND id_news IN ( SELECT id_news FROM ' . _DB_PREFIX_ . 'news_langs WHERE id_lang=' . $id_lang . ' )
                AND id_news IN ( SELECT id_new AS id_news FROM ' . _DB_PREFIX_ . 'news_cats_rel WHERE id_cat=' . $catObj->id . ' )
            ORDER by pos ASC LIMIT ' . ((int) Configuration::get('NEWS_N_HOME')) . ' ');

			//echo "<pre>"; print_r( $news); echo "</pre>";

                if ($news) {
					$cont = 0;
                    foreach ($news AS $new) {
                        $obj = (object) 'News';
						$obj->post = (int) ($new['pos']);
                        $obj->id_cat = (int) ($catObj->id);
						$cat = current($this->getCats((int) ($catObj->id), $id_lang));
						
                        $obj->cat_rewrite = $this->getCatRewrite((int) ($catObj->id), $id_lang);
						$obj->cat_name = $this->getCatName((int) ($catObj->id), $id_lang);
                        $obj->id_news = (int) ($new['id_news']);
						$obj->autor = $new['autor'];
                        $trads = $this->getTranslations((int) ($new['id_news']));
                        $obj->title = $trads[$id_lang]['title'];
                        $obj->rewrite = Tools::str2url($trads[$id_lang]['title']);
                        $obj->new = strip_tags($trads[$id_lang]['new']);
                        $obj->date = ($new['date'] > 0 ? ( $this->_months[date('n', $new['date'])] . ' ' . date('j', $new['date']) . ', ' . date('Y', $new['date']) ) : '');
						/*
						$date['year'] = date('Y',$new['date']);
						$date['month'] = date('M',$new['date']);
						$date['day'] = date('d',$new['date']);
						
						$obj->date = '<span>'.$date['day'].'</span><p>'.$date['month'].'</p><p>'.$date['year'].'</p>';
                        */
						$obj->img = '';
                        // get images
                        $img = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                        SELECT * FROM ' . _DB_PREFIX_ . 'news_imgs a
                            INNER JOIN `' . _DB_PREFIX_ . 'news_imgs_rel` b ON (a.`id_img` = b.`id_img`)
                        WHERE a.id_img IN ( SELECT id_img FROM ' . _DB_PREFIX_ . 'news_imgs_rel WHERE
                                                  id_news = ' . (int) ($new['id_news']) . ' ORDER BY pos DESC)
                       ORDER BY b.pos ASC LIMIT 1 ;  ');
						
						
						
                        if (isset($img[0]['id_img'])) {
                            if (intval($img[0]['id_img']) > 0) {
								if($cont==0)
								{
										if (file_exists($this->path_to_module . '/imgs/' . $img[0]['id_img'] . '-home-destacado.' . $this->_imageType)) {
											$obj->img = $this->url_to_module . '/imgs/' . $img[0]['id_img'] . '-home-destacado.' . $this->_imageType;
										}                                
								}else{
										if (file_exists($this->path_to_module . '/imgs/' . $img[0]['id_img'] . '-home.' . $this->_imageType)) {
											$obj->img = $this->url_to_module . '/imgs/' . $img[0]['id_img'] . '-home.' . $this->_imageType;
										}
									 }
                            }
                        }
                        $newsObj[] = $obj;
						$cont++;
                    }
                }
                $obj = '';
                $catsProducts[$count] = $newsObj;
                $count++;
            }
        }
		$realproducts = array();
		//echo "<pre>"; print_r($catsProducts); echo "</pre>-----------------------------";
		foreach($catsProducts as $cat => $products)
		{
			foreach($products as $kprod => $producto)
			{
				$realproducts[$producto->post] = $producto;
				//echo "producto <pre>"; print_r($producto); echo "</pre>";
			}
			
		}
		sort($realproducts);
		$catsProducts[0] = $realproducts;
		//echo "<pre>";print_r($catsProducts);echo "</pre>"; 
        $this->smarty->assign(array(
            'catsProductsObj' => $catsProducts,
            'catsObj' => $cats_list
        ));

        return $this->display(__FILE__, 'tpl/news_home.tpl');
    }

    /*
     *
     *
     *
     */

    public function hookbackOfficeHeader($params) {


        if (isset($_REQUEST['configure']) && isset($_REQUEST['news_ajax'])) {

            if (isset($_REQUEST['news_list_tags'])) {
                $this->tags_list(intval($_REQUEST['id_news']));
            }
            if (isset($_REQUEST['news_add_tags'])) {
                if (intval($_REQUEST['id_news']) != 0) { // enter if edit
                    $this->tags_addRemove(intval($_REQUEST['news_add_tags']), intval($_REQUEST['id_news']));
                }
            }
            if (isset($_REQUEST['news_delete_tags'])) {
                $this->tags_delete(intval($_REQUEST['news_delete_tags']));
            }
            if (isset($_REQUEST['add_tag'])) {
                $this->tags_add(intval($_REQUEST['id_news']));
            }
            if (isset($_REQUEST['edit_tag'])) {
                $this->tags_edit(intval($_REQUEST['edit_tag']), intval($_REQUEST['id_news']));
            }
            if (isset($_REQUEST['edit_save_tag'])) {
                $this->tag_save_edit(intval($_REQUEST['edit_save_tag']), intval($_REQUEST['id_news']));
            }

            // CATS -------------------------------------------------------------

            if (isset($_REQUEST['news_list_cat'])) {
                $this->cat_list(intval($_REQUEST['id_news']));
            }
            if (isset($_REQUEST['news_add_cat'])) {
                if (intval($_REQUEST['id_news']) != 0) { // enter if edit
                    $this->cat_addRemove(intval($_REQUEST['news_add_cat']), intval($_REQUEST['id_news']));
                }
            }
            if (isset($_REQUEST['news_delete_cat'])) {
                $this->cat_delete(intval($_REQUEST['news_delete_cat']));
            }
            if (isset($_REQUEST['add_cat'])) {
                $this->cat_add(intval($_REQUEST['id_news']));
            }
            if (isset($_REQUEST['edit_cat'])) {
                $this->cat_edit(intval($_REQUEST['edit_cat']), intval($_REQUEST['id_news']));
            }
            if (isset($_REQUEST['edit_save_cat'])) {
                $this->cat_save_edit(intval($_REQUEST['edit_save_cat']), intval($_REQUEST['id_news']));
            }
            if (isset($_REQUEST['news_cat_up'])) {
                $this->cat_up(intval($_REQUEST['news_cat_up']), intval($_REQUEST['id_news']));
            }
            if (isset($_REQUEST['news_cat_down'])) {
                $this->cat_down(intval($_REQUEST['news_cat_down']), intval($_REQUEST['id_news']));
            }

            // IMAGES  -------------------------------------------------------------
            if (isset($_REQUEST['upload_imag'])) {
                $this->upload_imag(intval($_REQUEST['id_news']));
            }

            if (isset($_REQUEST['get_images_arq'])) {
                $this->get_images_arq(intval($_REQUEST['get_images_arq']));
            }

            if (isset($_REQUEST['get_images_rel'])) {
                $this->get_images_rel(intval($_REQUEST['get_images_rel']));
            }

            if (isset($_REQUEST['news_images_pos']) && isset($_REQUEST['id_new'])) {
                if (isset($_REQUEST['up'])) {
                    $this->image_up(intval($_REQUEST['news_images_pos']), intval($_REQUEST['id_new']));
                } else {
                    $this->image_down(intval($_REQUEST['news_images_pos']), intval($_REQUEST['id_new']));
                }
            }

            if (isset($_REQUEST['image_delete_rel']) && isset($_REQUEST['id_new'])) {
                $this->image_delete_rel(intval($_REQUEST['image_delete_rel']), intval($_REQUEST['id_new']));
            }

            if (isset($_REQUEST['image_delete_arq']) && isset($_REQUEST['id_new'])) {
                $this->image_delete_arq(intval($_REQUEST['image_delete_arq']), intval($_REQUEST['id_new']));
            }

            if (isset($_REQUEST['add_images_rel']) && isset($_REQUEST['id_new'])) {
                $this->add_images_rel(intval($_REQUEST['add_images_rel']), intval($_REQUEST['id_new']));
            }

            // PRODUCTS REl -------------------------------------------------------------

            if (isset($_REQUEST['get_tree_arq'])) {
                $this->renderAdminCategorieTree(intval($_REQUEST['get_tree_arq']));
            }

            if (isset($_REQUEST['get_prod_cat']) && isset($_REQUEST['id_new'])) {
                $this->getProdsCategory(intval($_REQUEST['get_prod_cat']), intval($_REQUEST['id_new']), $params);
            }
            if (isset($_REQUEST['get_prod_rel'])) {
                $this->getProdRel(intval($_REQUEST['get_prod_rel']), $params);
            }
            if (isset($_REQUEST['add_prod_rel']) && isset($_REQUEST['id_new'])) {
                $this->addProdRel(intval($_REQUEST['add_prod_rel']), $_REQUEST['id_new']);
            }
            if (isset($_REQUEST['delete_prod_rel']) && isset($_REQUEST['id_new'])) {
                $this->deleteProdRel(intval($_REQUEST['delete_prod_rel']), $_REQUEST['id_new']);
            }
            if (isset($_REQUEST['up_prod_rel']) && isset($_REQUEST['id_new'])) {
                $this->upProdRel(intval($_REQUEST['up_prod_rel']), $_REQUEST['id_new']);
            }
            if (isset($_REQUEST['down_prod_rel']) && isset($_REQUEST['id_new'])) {
                $this->downProdRel(intval($_REQUEST['down_prod_rel']), $_REQUEST['id_new']);
            }

            // NEWS REl -------------------------------------------------------------

            if (isset($_REQUEST['add_news_rel']) && isset($_REQUEST['id_news_rel'])) {
                $this->addNewsRel(intval($_REQUEST['add_news_rel']), intval($_REQUEST['id_news_rel']));
            }

            if (isset($_REQUEST['get_news_rel'])) {
                $this->getNewsRel(intval($_REQUEST['get_news_rel']), $params);
            }

            if (isset($_REQUEST['get_news_rel_list'])) {
                $this->getNewsRelList(intval($_REQUEST['get_news_rel_list']), $params);
            }


            if (isset($_REQUEST['delete_news_rel']) && isset($_REQUEST['id_news_rel'])) {
                $this->deleteNewsRel(intval($_REQUEST['delete_news_rel']), intval($_REQUEST['id_news_rel']));
            }

            exit;
        }

        if (isset($_REQUEST['configure'])) {
            if ($_REQUEST['configure'] == $this->name && (isset($_REQUEST['news_add']) || isset($_REQUEST['news_edit']))) {
                $cssFilePath = $this->_path . 'css/news_admin.css';
                $jsFilePath = $this->_path . 'js/news_admin.js';

                return '<link type="text/css" rel="stylesheet" href="' . $cssFilePath . '" />
                        <script type="text/javascript" src="' . $jsFilePath . '"></script>';
            }
        }
    }

    // BACK OFFICE Methods -----------------------------------------


    private function displayInfo() {
        $this->_html.= '
			  <div style="float:left;width:380px;padding-right:70px;padding-left:40px;">
				  <img src="../modules/' . $this->name . '/' . $this->name . '.png" style="float:left; margin-right:15px;" />
				  <br />
				  <b>' . $this->displayName . '</b>
				  <br />
				  ' . $this->l('Version : ') . $this->version . ' <br />
				  <br />
				  <br />
			  </div>

			  <div style="float:left;">
				  <div class="table_info" id="table_info_last" style="width:380px;margin-top:0px;">
				  <h5><a href="mailto:support@ebyyd.com">' . $this->l('Report a problem') . '</a> <a target="_blank" href="../modules/' . $this->name . '/manual/Manual_EN.pdf">' . $this->l(' Manual ') . '</a>' . $this->l('Updates ') . '</h5>
				  <table >
				  <tbody>
				  <tr >
				  <td style="height:40px;">
				  <iframe src="http://www.ebyyd.com/ps/update/?v=' . $this->version . '&module=' . $this->name . '&s=' . urldecode(htmlspecialchars($_SERVER['HTTP_HOST'], ENT_COMPAT, 'UTF-8') . __PS_BASE_URI__) . '&ps_v=' . _PS_VERSION_ . '" height="40" width="375" frameborder="no" scrolling="no"></iframe>
				  </td>
				  </tr>
				  </tbody>
				  </table>
				  </div>
			  </div>';
    }

    /*
     *
     *
     *
     *
     */

    private function updateNews($id_new = 0) {

        $query = 'SELECT count(id_news) AS total FROM `' . _DB_PREFIX_ . 'news`
                            WHERE id_news="' . $id_new . '"  ; ';

        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        if (intval($rs[0]['total']) <= 0) {
            return FALSE;
        }

        $fieldsArray = array('title', 'new', 'description', 'keywords');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));

        foreach ($languages as $language) {
            $query = 'SELECT count(id_news) AS total FROM `' . _DB_PREFIX_ . 'news_langs`
                            WHERE id_news="' . $id_new . '" AND
                                  id_lang="' . ((int) ($language['id_lang'])) . '"  ; ';

            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

            if (intval($rs[0]['total']) <= 0) {

                Db::getInstance()->Execute(' INSERT INTO `' . _DB_PREFIX_ . 'news_langs`
                               (  `id_news`, `id_lang`, `' . $fieldsArray[0] . '`, `' . $fieldsArray[1] . '`, `' . $fieldsArray[2] . '`, `' . $fieldsArray[3] . '`)
                            VALUES
                                ( "' . $id_new . '", ' . $language['id_lang'] . ',
                                    "' . pSQL($_POST['body_' . $fieldsArray[0] . '_' . (int) ($language['id_lang'])]) . '",
                                    "' . pSQL($_POST['body_' . $fieldsArray[1] . '_' . (int) ($language['id_lang'])], true) . '",
                                    "' . pSQL($_POST['body_' . $fieldsArray[2] . '_' . (int) ($language['id_lang'])]) . '",
                                    "' . pSQL($_POST['body_' . $fieldsArray[3] . '_' . (int) ($language['id_lang'])]) . '"
                                        );');
            } else {

                Db::getInstance()->Execute('  UPDATE `' . _DB_PREFIX_ . 'news_langs`
                            SET
                                   `' . $fieldsArray[0] . '`= "' . pSQL($_POST['body_' . $fieldsArray[0] . '_' . (int) ($language['id_lang'])]) . '",
                                   `' . $fieldsArray[1] . '`= "' . pSQL($_POST['body_' . $fieldsArray[1] . '_' . (int) ($language['id_lang'])], true) . '",
                                   `' . $fieldsArray[2] . '`= "' . pSQL($_POST['body_' . $fieldsArray[2] . '_' . (int) ($language['id_lang'])]) . '",
                                   `' . $fieldsArray[3] . '`= "' . pSQL($_POST['body_' . $fieldsArray[3] . '_' . (int) ($language['id_lang'])]) . '"
                                WHERE  id_news="' . $id_new . '" AND id_lang="' . ((int) ($language['id_lang'])) . '" ');
            }
        }

        $this->active(intval($_REQUEST['news_active']), $id_new);

        Db::getInstance()->Execute('  UPDATE `' . _DB_PREFIX_ . 'news`
            SET
                   `autor`= "' . pSQL($_POST['news_autor']) . '"
                WHERE  id_news="' . $id_new . '" ');

        $this->_html .= '
                <div class="conf confirm">
                        ' . $this->l(' Changes Saved ') . '
                </div>';
    }

    /*
     *
     *
     *
     *
     */

    private function updateConfigurationsNews() {


        Configuration::updateValue('NEWS_SLIDESHOW_WIDTH', intval($_POST['news_slideshow_width']));
        Configuration::updateValue('NEWS_SLIDESHOW_HEIGHT', intval($_POST['news_slideshow_height']));
        Configuration::updateValue('NEWS_THEME', intval($_POST['news_theme']));
        Configuration::updateValue('NEWS_N_LIST_SIDES', intval($_POST['news_n_list_sides']));
        Configuration::updateValue('NEWS_N_HOME', intval($_POST['news_n_home']));
        Configuration::updateValue('NEWS_WIDTH', intval($_POST['news_width']));
        Configuration::updateValue('NEWS_RSS_N', intval($_POST['news_rss_n']));
        Configuration::updateValue('NEWS_N_PAGE', intval($_POST['news_n_page']));
        Configuration::updateValue('NEWS_SIDE_CATEGORIES', intval($_POST['news_side_categories']) == '1' ? 1 : 0);
        Configuration::updateValue('NEWS_AJAXPAGER', intval($_POST['news_ajaxpager']) == '1' ? 1 : 0);
        Configuration::updateValue('NEWS_REL', intval($_POST['news_rel']));
        Configuration::updateValue('NEWS_REL_PRODUCTS', intval($_POST['news_rel_products']) == '1' ? 1 : 0);
        Configuration::updateValue('NEWS_FB_COMMENTS', intval($_POST['news_fb_comments']) == '1' ? 1 : 0);
        Configuration::updateValue('NEWS_SOCIAL_BUTTON_HTML', (isset($_POST['news_social_button_html']) ? htmlentities($_POST['news_social_button_html']) : ''));

        $news_social_buttons = Array();
        for ($i = 0; $i < 7; $i++) {
            if (isset($_POST['sb_' . $i])) {
                $news_social_buttons[$i] = 1;
            } else {
                $news_social_buttons[$i] = 0;
            }
        }
        Configuration::updateValue('NEWS_SOCIAL_BUTTONS', serialize($news_social_buttons));

        $news_fb_comments_langs = array();
        $languages = Language::getLanguages(false);

        foreach ($languages as $language) {
            $news_fb_comments_langs[$language['id_lang']] = $_POST['news_fb_comments_langs_' . $language['id_lang']];
        }
        Configuration::updateValue('NEWS_FB_COMMENTS_LANGS', serialize($news_fb_comments_langs));

        $this->_html .= '
                <div class="conf confirm">
                        ' . $this->l('Settings updated') . '
                </div>';
    }

    /*
     *
     *
     *
     *
     */

    private function displayFormNews() {

        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        $page = (isset($_REQUEST['page']) ? intval($_REQUEST['page']) : 0);
        $list_n = (isset($_REQUEST['list_n']) ? (intval($_REQUEST['list_n']) > 0 ? intval($_REQUEST['list_n']) : 20) : 20);
        $rs = $this->getNews(($page * $list_n), $list_n);
        $total = count($this->getNews());


        $this->_html .= '  <div class="clear"></div>
                                    <br />
                                    <span style="float: left;">
                                    ' . $this->l('Page') . ' <b>' . (($page + 1)) . '</b> / ' . intval((($total - 1) + $list_n) / $list_n) . ' ';
        if (intval(($total - 1) / $list_n) <= ($page + 1) && $page > '0') {
            $this->_html .= '  &nbsp; <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&list_n=' . $list_n . '&page=' . ($page - 1) . '">
                                            <input type="image" src="../img/admin/list-prev.gif" >
                                   </a>  ';
        }
        if (intval(($total - 1) / $list_n) >= 1 && intval(($total - 1) / $list_n) >= ($page + 1)) {
            $this->_html .= '    &nbsp; <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&list_n=' . $list_n . '&page=' . ($page + 1) . '">
                                            <input type="image" src="../img/admin/list-next.gif" >
                                   </a>  ';
        }
        $this->_html .= '   | ' . $this->l('Display') . '
                                        <script> $(document).ready( function() {  $("#pagination").change( function() {location.href = "?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&list_n="+$(this).val();});});</script>
                                        <select name="pagination" id="pagination" >
                                            <option value="5" ' . ($list_n == 5 ? 'selected="selected"' : '') . '>5</option>
                                            <option value="20" ' . ($list_n == 20 ? 'selected="selected"' : '') . '>20</option>
                                            <option value="50" ' . ($list_n == 50 ? 'selected="selected"' : '') . '>50</option>
                                            <option value="100" ' . ($list_n == 100 ? 'selected="selected"' : '') . '>100</option>
                                            <option value="300" ' . ($list_n == 300 ? 'selected="selected"' : '') . '>300</option>
                                        </select>
                                        / ' . $total . ' ' . $this->l('result(s)') . '
                                    </span><div class="clear"></div><br />';

        $this->_html .= '  <table id="category" class="table tableDnD" cellpadding="0" cellspacing="0" style="width:100%;">
                                <thead>
                                    <tr class="nodrag nodrop">
                                        <th class="left" width="5%"></th>
                                        <th class=" center" width="5%">' . $this->l('ID') . '</th>
                                        <th class=" center"  width="5%"></th>
                                        <th class=" center"  width="10%">' . $this->l('Date') . '</th>
                                        <th >' . $this->l('Title') . '</th>
                                        <th class=" center" width="5%">' . $this->l('Displayed') . '</th>
                                        <th class="center"  width="10%">' . $this->l('Actions') . '</th>
                                    </tr>
                                </thead>
                                <tbody>';


        for ($i = 0; $i < count($rs); $i++) {

            $trads = $this->getTranslations($rs[$i]['id_news']);

            $this->_html .= '
                                    <tr ' . ($i % 2 == 0 ? 'class="alt_row"' : '') . '>
                                         
                                        <td class=" center"> ' . (($page * $list_n) + ($i + 1)) . ' </td>
                                        <td class=" center"> ' . $rs[$i]['id_news'] . ' </td>
                                         <td class="center">';
            if ($i > 0 && count($rs) > 1) {
                $this->_html .= ' <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&up=' . $rs[$i]['id_news'] . '&pos=' . $rs[$i]['pos'] . '&list_n=' . $list_n . '">
                                                              <img src="../img/admin/up.gif" alt="' . $this->l('Up') . '" title="' . $this->l('Up') . '"></a>';
            }
            if (($i + 1) < count($rs) && count($rs) > 1) {
                $this->_html .= ' <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&down=' . $rs[$i]['id_news'] . '&pos=' . $rs[$i]['pos'] . '&list_n=' . $list_n . '">
                                                              <img src="../img/admin/down.gif" alt="' . $this->l('Down') . '" title="' . $this->l('Down') . '"></a>';
            }
            $this->_html .= '
                                        </td>
                                        <td class=" center">' . date('Y-m-d', $rs[$i]['date']) . '</td>
                                        <td class="pointer" onclick="document.location = \'?tab=AdminModules&configure=' . $this->name . '&id_news=' . $rs[$i]['id_news'] . '&token=' . $_REQUEST['token'] . '&news_edit=1\'"
                                        >' . Tools::truncate($trads[$defaultLanguage]['title'], 100) . '</td>
                                        <td class="center">
                                            <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_active=' . ($rs[$i]['active'] != '1' ? 1 : 0) . '&id_news=' . $rs[$i]['id_news'] . '&list_n=' . $list_n . '">
                                                <img src="../img/admin/' . ( $rs[$i]['active'] != '0' ? 'enabled' : 'disabled') . '.gif" >
                                            </a>
                                        </td>
                                        
                                      
                                        <td class="center" style="width:100px;;" >
                                            <a href="?tab=AdminModules&configure=' . $this->name . '&id_news=' . $rs[$i]['id_news'] . '&token=' . $_REQUEST['token'] . '&news_edit=1">
                                                <img src="../img/admin/edit.gif" alt="' . $this->l('Edit') . '" title="' . $this->l('Edit ') . '">
                                            </a>
                                            <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&id_news=' . $rs[$i]['id_news'] . '&news_delete=1&list_n=' . $list_n . '" onclick="return confirm(\'' . $this->l('Delete?') . ' --> ' . ($i + 1) . ' ?\');">
                                                <img src="../img/admin/delete.gif" alt="' . $this->l('Delete ') . '" title="' . $this->l('Delete ') . '">
                                            </a>
                                        </td>
                                    </tr>';
        }
        if ($i == 0) {
            $this->_html .= '
                                    <tr class="alt_row">
                                           <td  colspan="7">' . $this->l('No itens to list') . '</td>
                                    </tr>';
        }

        $this->_html .= '
                   </tbody>
                </table>
                <br>';
        $this->_html .= '
                                    <span style="float: left;">
                                    ' . $this->l('Page') . ' <b>' . (($page + 1)) . '</b> / ' . intval((($total - 1) + $list_n) / $list_n) . ' ';
        if (intval(($total - 1) / $list_n) <= ($page + 1) && $page > '0') {
            $this->_html .= '  &nbsp; <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&list_n=' . $list_n . '&page=' . ($page - 1) . '">
                                            <input type="image" src="../img/admin/list-prev.gif" >
                                   </a>  ';
        }
        if (intval(($total - 1) / $list_n) >= 1 && intval(($total - 1) / $list_n) >= ($page + 1)) {
            $this->_html .= '    &nbsp; <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&list_n=' . $list_n . '&page=' . ($page + 1) . '">
                                            <input type="image" src="../img/admin/list-next.gif" >
                                   </a>  ';
        }
        $this->_html .= '   | ' . $this->l('Display') . '
                                        <script> $(document).ready( function() {  $("#pagination").change( function() {location.href = "?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&list_n="+$(this).val();});});</script>
                                        <select name="pagination" id="pagination" >
                                            <option value="5" ' . ($list_n == 5 ? 'selected="selected"' : '') . '>5</option>
                                            <option value="20" ' . ($list_n == 20 ? 'selected="selected"' : '') . '>20</option>
                                            <option value="50" ' . ($list_n == 50 ? 'selected="selected"' : '') . '>50</option>
                                            <option value="100" ' . ($list_n == 100 ? 'selected="selected"' : '') . '>100</option>
                                            <option value="300" ' . ($list_n == 300 ? 'selected="selected"' : '') . '>300</option>
                                        </select>
                                        / ' . $total . ' ' . $this->l('result(s)') . '
                                    </span>
                                     <div class="clear"></div>
                                    <br />';
    }

    /*
     *
     *
     *
     *
     */

    private function displayFormConfigurationsNews() {

        global $cookie;

        $conf = Configuration::getMultiple(
                        array(
                            'NEWS_N_LIST_SIDES',
                            'NEWS_SIDE_CATEGORIES',
                            'NEWS_N_HOME',
                            'NEWS_N_PAGE',
                            'NEWS_AJAXPAGER',
                            'NEWS_RSS_N',
                            'NEWS_THEME',
                            'NEWS_WIDTH',
                            'NEWS_REL',
                            'NEWS_REL_PRODUCTS',
                            'NEWS_SOCIAL_BUTTONS',
                            'NEWS_SOCIAL_BUTTON_HTML',
                            'NEWS_FB_COMMENTS',
                            'NEWS_FB_COMMENTS_LANGS',
                            'NEWS_SLIDESHOW_WIDTH',
                            'NEWS_SLIDESHOW_HEIGHT'
        ));


        $conf['NEWS_SOCIAL_BUTTONS'] = unserialize($conf['NEWS_SOCIAL_BUTTONS']);
        $conf['NEWS_FB_COMMENTS_LANGS'] = unserialize($conf['NEWS_FB_COMMENTS_LANGS']);

        $this->_html.='
			<div style="float:left;width:100%;padding:10px 20px;">
					<span  style="cursor:pointer;font-size:10px;">
                         <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '">
						    <img src="../img/admin/arrow2.gif" alt="' . $this->l('Go back') . '" class="middle"> ' . $this->l('Go back') . '
						 </a>
                      </span>
		   </div>
		   <div class="clear"></div> ';

        $this->_html.='<form action="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&configurations=1"
								enctype="multipart/form-data" method="post">
								<input type="hidden" name="submitUpdateConfigurationsNews" value="1" />
								
							<div class="clear"></div>
                            <br />
							

                             <fieldset  style="width:400px;float:left;padding:0 20px;margin-left:20px;" >
							     <legend>' . $this->l('Side Block') . ' </legend>
							 
									 
									  <div style="width:100%;padding:10px 0;" >
										  ' . $this->l(' Number of articles displayed') . ':
										  <select name="news_n_list_sides" > ';
        for ($i = 0; $i <= 30; $i++) {
            $this->_html .= '
														<option value="' . $i . '" ' . (( $conf['NEWS_N_LIST_SIDES'] == $i) ? ' selected ' : '') . ' >' . $i . '</option>';
        }
        $this->_html .= '
										  </select>
									  </div>
									  


									  <div style="width:100%;padding:10px 0;" >
											' . $this->l(' Show Categories') . ':
											<input type="radio" value="1" id="news_side_categories_on" name="news_side_categories" ' . ($conf['NEWS_SIDE_CATEGORIES'] == '1' ? 'checked="checked"' : '') . '>
											<img title="' . $this->l('Enabled') . '" alt="' . $this->l('Enabled') . '" src="../img/admin/enabled.gif">
											<input type="radio" value="0" id="news_side_categories_off" name="news_side_categories" ' . ($conf['NEWS_SIDE_CATEGORIES'] == '0' ? 'checked="checked"' : '') . '>
											<img title="' . $this->l('Disabled') . '" alt="' . $this->l('Disabled') . '" src="../img/admin/disabled.gif">
									  </div>
									  
							</fieldset>
							



                            <fieldset  style="width:400px;float:right;padding:0 20px;margin-left:20px;" >
                                <legend>' . $this->l('Home Block') . ' </legend>
							 

									  <div style="width:100%;padding:10px 0;" >
										  ' . $this->l(' Number of articles displayed by category') . ':
										  <select name="news_n_home" > ';
        for ($i = 0; $i <= 30; $i++) {
            $this->_html .= '
														<option value="' . $i . '" ' . (( $conf['NEWS_N_HOME'] == $i) ? ' selected ' : '') . ' >' . $i . '</option>';
        }
        $this->_html .= '
										  </select>
									  </div>
									  

							</fieldset>
							
							<div class="clear"></div>
                            <br />
							
							



                            <fieldset  style="width:400px;float:left;padding:0 20px;margin-left:20px;" >
                                <legend>' . $this->l('List ') . ' </legend>
							 

									  <div style="width:100%;padding:10px 0;" >
										  ' . $this->l(' Number of articles per page') . ':
										  <select name="news_n_page" > ';
        for ($i = 2; $i <= 30; $i++) {
            $this->_html .= '
														<option value="' . $i . '" ' . (( $conf['NEWS_N_PAGE'] == $i) ? ' selected ' : '') . ' >' . $i . '</option>';
        }
        $this->_html .= '
										  </select>
									  </div>
									  


									  <div style="width:100%;padding:10px 0;" >
											' . $this->l(' Ajax Pager') . ':
											<input type="radio" value="1" id="news_ajaxpager_on" name="news_ajaxpager" ' . ($conf['NEWS_AJAXPAGER'] == '1' ? 'checked="checked"' : '') . '>
											<img title="' . $this->l('Enabled') . '" alt="' . $this->l('Enabled') . '" src="../img/admin/enabled.gif">
											<input type="radio" value="0" id="news_ajaxpager_off" name="news_ajaxpager" ' . ($conf['NEWS_AJAXPAGER'] == '0' ? 'checked="checked"' : '') . '>
											<img title="' . $this->l('Disabled') . '" alt="' . $this->l('Disabled') . '" src="../img/admin/disabled.gif">
									  </div>

							</fieldset>

							


                            <fieldset  style="width:400px;float:right;padding:0 20px;margin-left:20px;" >
                                <legend>' . $this->l('Rss') . ' </legend>
							 

									  <div style="width:100%;padding:10px 0;" >
										  ' . $this->l(' Number of articles in RSS') . ':
										  <select name="news_rss_n" > ';
        for ($i = 1; $i <= 50; $i++) {
            $this->_html .= '
														<option value="' . $i . '" ' . (( $conf['NEWS_RSS_N'] == $i) ? ' selected ' : '') . ' >' . $i . '</option>';
        }
        $this->_html .= '
										  </select>
									  </div>
									  

							</fieldset>
							
							<div class="clear"></div>
                            <br />
							
							



                            <fieldset  style="width:860px;float:left;padding:0 20px;margin-left:20px;" >
                                <legend>' . $this->l('Article Page') . ' </legend>

                                     <div style="width:100%;padding:10px 0;" >
                                         <fieldset >
                                            <legend> ' . $this->l('Templates') . '</legend>
                                                <table cellpadding="0" cellspacing="0" width="100%">
                                            <tr>
                                                <td width="33%" valign="top" align="center">

                                                    <input type="radio" value="1" id="news_theme" name="news_theme" ' . ($conf['NEWS_THEME'] == '1' ? 'checked="checked"' : '') . '>
                                                        <br>
                                                        <br>
                                                       <img src="../modules/' . $this->name . '/img/theme_1.png">

                                                </td>
                                                <td width="33%" valign="top" align="center">

                                                    <input type="radio" value="2" id="news_theme" name="news_theme" ' . ($conf['NEWS_THEME'] == '2' ? 'checked="checked"' : '') . '>
                                                    <br>
                                                    <br>
                                                    <img src="../modules/' . $this->name . '/img/theme_2.png">
                                                        
                                                </td>
                                                <td width="33%" valign="top" align="center">

                                                    <input type="radio" value="3" id="news_theme" name="news_theme" ' . ($conf['NEWS_THEME'] == '3' ? 'checked="checked"' : '') . '>
                                                    <br>
                                                    <br>
                                                    <img src="../modules/' . $this->name . '/img/theme_3.png">
                                                </td>
                                            </table>
                                        </fieldset>
                                    </div>

									<table cellpadding="0" cellspacing="20" width="100%">
                                        <tr>
                                            <td width="50%" valign="top" align="left">
											

											<div style="width:100%;padding:10px 0;" >
													 <fieldset >
                                                        <legend>' . $this->l(' Area Width') . '</legend>
                                                            <img src="../modules/' . $this->name . '/img/width_img.png"><br>
                                                            <center><input type="text" size=5 name="news_width" value="' . intval($conf['NEWS_WIDTH']) . '">px  ' . $this->l(' ( in  pixels) ') . '</center> ';

        $this->_html .= '                     </fieldset>
											</div>

										

											<div style="width:100%;padding:10px 0;" >
													<fieldset >
                                                        <legend>' . $this->l(' Buttons & SocialShare') . '</legend>';

        for ($i = 0; $i < 7; $i++) {
            $this->_html .= '
                                                                 <div style="width:100%;margin:10px 0;" >
                                                                    <input type="checkbox" value="1" id="sb_' . $i . '" name="sb_' . $i . '"
                                                                    ' . ($conf['NEWS_SOCIAL_BUTTONS'][$i] == '1' ? 'checked="checked"' : '') . '>
                                                                    <img src="../modules/' . $this->name . '/img/sb_' . $i . '.png"><br>
                                                                  </div>';
        }
        $this->_html .= '
                                                                    <div style="width:100%;padding:10px 0;" >
                                                                        ' . $this->l(' Add Html Button') . '<br>
                                                                             <textarea style="width:365px;height:60px;" name="news_social_button_html" id="news_social_button_html">' . ($conf['NEWS_SOCIAL_BUTTON_HTML'] ? html_entity_decode($conf['NEWS_SOCIAL_BUTTON_HTML']) : '') . '</textarea>
                                                                      
                                                                    </div>
                                                    </fieldset>
											</div>



												

								       </td><td width="50%" valign="top" align="left">
											
									   	<div style="width:100%;padding:10px 0;" >
													 <fieldset >
                                                        <legend>' . $this->l(' Slideshow - Image Width') . '</legend>
                                                            <center>
																<img src="../modules/' . $this->name . '/img/slideshow_img.png">
																<br>
																<br>
																<input type="text" size=3 name="news_slideshow_width" value="' . intval($conf['NEWS_SLIDESHOW_WIDTH']) . '"> x
																<input type="text" size=3 name="news_slideshow_height" value="' . intval($conf['NEWS_SLIDESHOW_HEIGHT']) . '">px  ' . $this->l(' ( in  pixels) ') . '<br>
																	<br>' . $this->l(' This change are only apply to new uploads ') . '
															</center> ';

        $this->_html .= '                     </fieldset>
											</div>

                                                <div style="width:100%;padding:10px 0;" >
                                                      <fieldset >
                                                        <legend>  ' . $this->l('Facebook Comments') . '</legend>

                                                        ' . $this->l('Enable') . ' <input type="radio" value="1" id="news_fb_comments_on" name="news_fb_comments" ' . ($conf['NEWS_FB_COMMENTS'] == '1' ? 'checked="checked"' : '') . '>
                                                        <img title="' . $this->l('Enabled') . '" alt="' . $this->l('Enabled') . '" src="../img/admin/enabled.gif">
                                                        <input type="radio" value="0" id="news_fb_comments_off" name="news_fb_comments" ' . ($conf['NEWS_FB_COMMENTS'] == '0' ? 'checked="checked"' : '') . '>
                                                        <img title="' . $this->l('Disabled') . '" alt="' . $this->l('Disabled') . '" src="../img/admin/disabled.gif"><br><br> ';


        $languages = Language::getLanguages(false);
        $list_op_langs = Array('Catalan' => 'ca_ES', 'Czech' => 'cs_CZ', 'Welsh' => 'cy_GB', 'Danish' => 'da_DK', 'German' => 'de_DE', 'Basque' => 'eu_ES', 'English (Pirate)' => 'en_PI', 'English (Upside Down)' => 'en_UD', 'Cherokee' => 'ck_US', 'Spanish' => 'es_LA', 'Spanish (Chile)' => 'es_CL', 'Spanish (Colombia)' => 'es_CO', 'Spanish (Spain)' => 'es_ES', 'Spanish (Mexico)' => 'es_MX', 'Spanish (Venezuela)' => 'es_VE', 'Finnish (test)' => 'fb_FI', 'Finnish' => 'fi_FI', 'French (France)' => 'fr_FR', 'Galician' => 'gl_ES', 'Hungarian' => 'hu_HU', 'Italian' => 'it_IT', 'Japanese' => 'ja_JP', 'Korean' => 'ko_KR', 'Norwegian (bokmal)' => 'nb_NO', 'Norwegian (nynorsk)' => 'nn_NO', 'Dutch' => 'nl_NL', 'Polish' => 'pl_PL', 'Portuguese (Brazil)' => 'pt_BR', 'Portuguese (Portugal)' => 'pt_PT', 'Romanian' => 'ro_RO', 'Russian' => 'ru_RU', 'Slovak' => 'sk_SK', 'Slovenian' => 'sl_SI', 'Swedish' => 'sv_SE', 'Thai' => 'th_TH', 'Turkish' => 'tr_TR', 'Kurdish' => 'ku_TR', 'Simplified Chinese (China)' => 'zh_CN', 'Traditional Chinese (Hong Kong)' => 'zh_HK', 'Traditional Chinese (Taiwan)' => 'zh_TW', 'Leet Speak' => 'fb_LT', 'Afrikaans' => 'af_ZA', 'Albanian' => 'sq_AL', 'Armenian' => 'hy_AM', 'Azeri' => 'az_AZ', 'Belarusian' => 'be_BY', 'Bengali' => 'bn_IN', 'Bosnian' => 'bs_BA', 'Bulgarian' => 'bg_BG', 'Croatian' => 'hr_HR', 'Dutch (Belgi√´)' => 'nl_BE', 'English (UK)' => 'en_GB', 'Esperanto' => 'eo_EO', 'Estonian' => 'et_EE', 'Faroese' => 'fo_FO', 'French (Canada)' => 'fr_CA', 'Georgian' => 'ka_GE', 'Greek' => 'el_GR', 'Gujarati' => 'gu_IN', 'Hindi' => 'hi_IN', 'Icelandic' => 'is_IS', 'Indonesian' => 'id_ID', 'Irish' => 'ga_IE', 'Javanese' => 'jv_ID', 'Kannada' => 'kn_IN', 'Kazakh' => 'kk_KZ', 'Latin' => 'la_VA', 'Latvian' => 'lv_LV', 'Limburgish' => 'li_NL', 'Lithuanian' => 'lt_LT', 'Macedonian' => 'mk_MK', 'Malagasy' => 'mg_MG', 'Malay' => 'ms_MY', 'Maltese' => 'mt_MT', 'Marathi' => 'mr_IN', 'Mongolian' => 'mn_MN', 'Nepali' => 'ne_NP', 'Punjabi' => 'pa_IN', 'Romansh' => 'rm_CH', 'Sanskrit' => 'sa_IN', 'Serbian' => 'sr_RS', 'Somali' => 'so_SO', 'Swahili' => 'sw_KE', 'Filipino' => 'tl_PH', 'Tamil' => 'ta_IN', 'Tatar' => 'tt_RU', 'Telugu' => 'te_IN', 'Malayalam' => 'ml_IN', 'Ukrainian' => 'uk_UA', 'Uzbek' => 'uz_UZ', 'Vietnamese' => 'vi_VN', 'Xhosa' => 'xh_ZA', 'Zulu' => 'zu_ZA', 'Khmer' => 'km_KH', 'Tajik' => 'tg_TJ', 'Arabic' => 'ar_AR', 'Hebrew' => 'he_IL', 'Urdu' => 'ur_PK', 'Persian' => 'fa_IR', 'Syriac' => 'sy_SY', 'Yiddish' => 'yi_DE', 'Guaran√≠' => 'gn_PY', 'Quechua' => 'qu_PE', 'Aymara' => 'ay_BO', 'Northern S√°mi' => 'se_NO', 'Pashto' => 'ps_AF', 'Klingon' => 'tl_ST');
        $this->_html .= '            ' . $this->l(' Select the Languages of the Comments of Facebook') . ' <br>';
        foreach ($languages as $language) {

            $this->_html .= '             <div style="width:100%;margin:10px 10px;" >
                                                    <img src="../img/l/' . (int) ($language['id_lang']) . '.jpg">

                                                        <select name="news_fb_comments_langs_' . $language['id_lang'] . '" >
                                                            <option value="en_US">English (US)</option>';
            foreach ($list_op_langs as $key => $value) {
                $this->_html .= '                             <option value="' . $value . '" ' . (isset($conf['NEWS_FB_COMMENTS_LANGS'][(int) ($language['id_lang'])]) ? ($conf['NEWS_FB_COMMENTS_LANGS'][(int) ($language['id_lang'])] == $value ? ' selected="selected" ' : '') : '') . '>' . $key . '</option>';
            }
            $this->_html .= '                    </select>
                                                    </div>';
        }
        $this->_html .= '               </fieldset>
                                                </div>






											 <div style="width:100%;padding:10px 0;" >
												   <fieldset >
                                                        <legend> ' . $this->l(' Number of related articles') . '</legend>
                                                              <select name="news_rel" > ';
        for ($i = 0; $i <= 30; $i++) {
            $this->_html .= '
                                                                            <option value="' . $i . '" ' . (( $conf['NEWS_REL'] == $i) ? ' selected ' : '') . ' >' . $i . '</option>';
        }
        $this->_html .= '
                                                              </select>
                                                    </fieldset>
											  </div>





											  <div style="width:100%;padding:10px 0;" >
													 <fieldset >
                                                        <legend> ' . $this->l('Related Products') . '</legend>
                                                                <input type="radio" value="1" id="news_rel_products_on" name="news_rel_products" ' . ($conf['NEWS_REL_PRODUCTS'] == '1' ? 'checked="checked"' : '') . '>
                                                                <img title="' . $this->l('Enabled') . '" alt="' . $this->l('Enabled') . '" src="../img/admin/enabled.gif">
                                                                <input type="radio" value="0" id="news_rel_products_off" name="news_rel_products" ' . ($conf['NEWS_REL_PRODUCTS'] == '0' ? 'checked="checked"' : '') . '>
                                                                <img title="' . $this->l('Disabled') . '" alt="' . $this->l('Disabled') . '" src="../img/admin/disabled.gif">
                                                    </fieldset>
                                                </div>


											</td>
										</tr>
									</table>
											
											
									 

							</fieldset>

							
							

							<div class="clear"></div>
                            <br />

							
							<div style="float:left;width:100%;text-align:center;">
								<input type="submit" name="submitAsearch" value="' . $this->l(' Update settings ') . '" class="button" />
							</div>



					 </form>';
    }

    /*
     *
     *
     *
     *
     */

    private function displayFormTopMenu() {
        $this->_html.='
			<div style="float:left;width:100%;padding: 40px 0 10px 0;">
                    <span  style="padding-left:40px;margin:0 10px;cursor:pointer;font-size:10px;diplay:inline-block;float:left;">
                         <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_add=1">
						    <img src="../img/admin/add.gif" alt="' . $this->l('Add') . '" class="middle"> ' . $this->l('Add Article') . '
						 </a>
                      </span>

					<span  style="padding-right:40px;margin:0 10px;cursor:pointer;font-size:10px;diplay:inline-block;float:right;">
                         <a href="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&configurations=1">
						    <img src="../img/admin/manufacturers.gif" alt="' . $this->l('Edit Configurations') . '" class="middle"> ' . $this->l('Edit Configurations') . '
						 </a>
                      </span>
                      
                      
		   </div>';
    }

    /*
     *
     *
     *
     *
     */

    private function displayFormAddEditNews() {
        global $cookie;


        $id_new = (isset($_REQUEST['id_news']) ? intval($_REQUEST['id_news']) : 0);

        if ($id_new == 0) {
            $new_draft = 1;
            // create news tmp backup
            $id_new = $this->create_new_backup();
        }


        // TRADS --------------------------------------------------------
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        $languages = Language::getLanguages(false);
        $iso = Language::getIsoById((int) ($cookie->id_lang));
        $divLangName = 'title¤new¤description¤keywords¤tag¤cat';

        $ad = dirname($_SERVER["PHP_SELF"]);
        $this->_html .= '
			<script type="text/javascript">

                        var iso = \'' . $iso . '\' ;
			var pathCSS = \'' . _THEME_CSS_DIR_ . '\' ;
			var ad = \'' . $ad . '\' ;

	$(document).ready(function(){

			tinySetup({
				editor_selector :"autoload_rte",
				theme_advanced_buttons1 : "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull|cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,undo,redo",
				theme_advanced_buttons2 : "link,unlink,anchor,image,cleanup,code,|,forecolor,backcolor,|,hr,removeformat,visualaid,|,charmap,media,|,ltr,rtl,|,fullscreen",
				theme_advanced_buttons3 : "",
				theme_advanced_buttons4 : ""
			});

	});
			</script>
			<script type="text/javascript" src="' . __PS_BASE_URI__ . 'js/tiny_mce/tiny_mce.js"></script>
			<script type="text/javascript" src="' . __PS_BASE_URI__ . 'js/tinymce.inc.js"></script>';


        // [END Trads] --------------------------------------------------

        $trads = $this->getTranslations($id_new);

        $new = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
													SELECT * FROM ' . _DB_PREFIX_ . 'news  WHERE
														id_news = "' . $id_new . '"  ;');

        $this->_html.='
                        
						 <div style="float:left;padding:30px 20px 30px 0px;">';

        $this->_html.='		<input type="button" style="margin-right:30px;" onclick="parent.location=\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '\'" name="submitAsearch"
                                                    value=" ' . $this->l(' Go back ') . ' " class="button"> ';

        if (isset($new_draft)) {
            $this->_html.='		<input type="button" style="margin-right:30px;" onclick="if(confirm(\'' . $this->l(' Do you want to delete this Draft? ') . '\')){parent.location=\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&delete_draft=' . $id_new . '\';}" name="submitAsearch"
                                                        value=" ' . $this->l(' Go back and Delete Draft ') . ' " class="button"> ';
        }


        $this->_html.='
                             <input type="button" style="margin-left:170px;padding-left: 25px;padding-right: 25px;" onclick="submitformNew();" name="submitAsearch" value=" ' . $this->l('Save') . ' " class="button">
						 </div>
				   
                   <div id="newsAjaxOut" style="display:hidden;width:1px;height:1px;overflow:hidden;"></div>
                   <div style="display:hidden;width:1px;height:1px;overflow:hidden;">
						<iframe name="iframeOutNews" id="iframeOutNews" src="" style="display:hidden; width:1px;height:1px;" ></iframe>
				   </div>
                   <div class="clear"></div> ';



        $this->_html .='
                      <fieldset>
                        <legend  style="font-size:10px;"><img src="../img/admin/' .
                ($id_new > 0 ? 'edit' : 'add') . '.gif" alt="' .
                ($id_new > 0 ? $this->l('Edit ') : $this->l('Add ')) . '" class="middle"> ' .
                ($id_new > 0 ? $this->l('Edit ') : $this->l('Edit ')) . '</legend>';

        $this->_html .='
            <form action="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '" name="fromNewUpdate" id="fromNewUpdate" enctype="multipart/form-data" method="post">';
        $this->_html .=' <input type="hidden" name="id_new" value="' . $id_new . '" />';
        $this->_html .=' <input type="hidden" name="submitUpdateNews" value="1" />';


        $this->_html .=' <div style="float:left;display:inline-block;width:665px;" >';
        // FORM ADD EDIT --------------
        //title
        $this->_html .=' <div style="padding-bottom:15px;display:inline-block;" class="translatable">' . $this->l('Title') . '<br>';
        foreach ($languages as $language) {
            $this->_html .= ' <div  id="title_' . $language['id_lang'] . '" style="display: ' . ($language['id_lang'] == $defaultLanguage ? 'block' : 'none') . ';float: left;" >
                                                                             <input type="text" name="body_title_' . $language['id_lang'] . '" id="body_title_' . $language['id_lang'] . '" size="120"  value="' . ($trads ? $trads[$language['id_lang']]['title'] : '') . '"  />
                                                                      </div>';
        }
        $this->_html .= $this->displayFlags($languages, $defaultLanguage, $divLangName, 'title', true);
        $this->_html .= ' <sup style="color:red;padding:5px;float: left;">*</sup></div>';

        // new
        $this->_html .=' <div style="padding-bottom:15px;display:inline-block;width:665px;min-height:241px;" class="translatable">' . $this->l('Article') . '<br>';
        foreach ($languages as $language) {
            $this->_html .= '<div  id="new_' . $language['id_lang'] . '" style="display: ' . ($language['id_lang'] == $defaultLanguage ? 'block' : 'none') . ';float: left;" >
                                                                            <textarea class="autoload_rte" cols="70" rows="10" name="body_new_' . $language['id_lang'] . '" id="body_new_' . $language['id_lang'] . '" >' . ($trads ? $trads[$language['id_lang']]['new'] : '') . '</textarea>
                                                                      </div>';
        }


        $this->_html .= $this->displayFlags($languages, $defaultLanguage, $divLangName, 'new', true);
        $this->_html .= ' <sup style="color:red;padding:5px;float: left;">*</sup></div>';



        //meta description
        $this->_html .=' <div style="padding-bottom:15px;display:inline-block;" class="translatable">' . $this->l('Meta description') . '<br>';
        foreach ($languages as $language) {
            $this->_html .= ' <div  id="description_' . $language['id_lang'] . '" style="display: ' . ($language['id_lang'] == $defaultLanguage ? 'block' : 'none') . ';float: left;" >
                                                                             <input type="text" name="body_description_' . $language['id_lang'] . '" id="body_description_' . $language['id_lang'] . '" size="120"  value="' . ($trads ? $trads[$language['id_lang']]['description'] : '') . '"  />
                                                                      </div>';
        }
        $this->_html .= $this->displayFlags($languages, $defaultLanguage, $divLangName, 'description', true);
        $this->_html .= ' </div>';

        //meta keywords
        $this->_html .=' <div style="padding-bottom:15px;display:inline-block;" class="translatable">' . $this->l('Meta keywords') . '<br>';
        foreach ($languages as $language) {
            $this->_html .= ' <div  id="keywords_' . $language['id_lang'] . '" style="display: ' . ($language['id_lang'] == $defaultLanguage ? 'block' : 'none') . ';float: left;" >
                                                                             <input type="text" name="body_keywords_' . $language['id_lang'] . '" id="body_keywords_' . $language['id_lang'] . '" size="120"  value="' . ($trads ? $trads[$language['id_lang']]['keywords'] : '') . '"  />
                                                                      </div>';
        }
        $this->_html .= $this->displayFlags($languages, $defaultLanguage, $divLangName, 'keywords', true);
        $this->_html .= ' </div>';


        $this->_html .= '
								<div style="padding-bottom:15px;display:inline-block;" class="translatable">' . $this->l('Autor') . '<br>
									<div  style="display: float: left;" >
                                        <input type="text" name="news_autor" size="40"  value="' . ($new[0]['autor'] ? $new[0]['autor'] : '') . '"  />
                                    </div>
							   </div>
									
									
									<div style="width:100%;padding:10px 0;" >
											' . $this->l(' Enable') . ':
											<input type="radio" value="1" id="news_active_on" name="news_active" ' . ($new[0]['active'] == '1' ? 'checked="checked"' : '') . '>
											<img title="' . $this->l('Enabled') . '" alt="' . $this->l('Enabled') . '" src="../img/admin/enabled.gif">
											<input type="radio" value="0" id="news_active_off" name="news_active" ' . ($new[0]['active'] == '0' ? 'checked="checked"' : '') . '>
											<img title="' . $this->l('Disabled') . '" alt="' . $this->l('Disabled') . '" src="../img/admin/disabled.gif">
									</div>

						</div>
			
					

                </form>';


        $this->_html .=' <div style="float:right;display:inline-block;width:220px;" >
                                <div style="float:right;display:inline-block;width:220px;" >
                                <fieldset  style="background:#fff;">
                                    <legend  style="font-size:10px;">' . $this->l('Categories') . '</legend>';
        //add new tag
        $this->_html .=' <div style="padding-bottom:15px;display:inline-block;" class="translatable">
                                          <form action="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&id_news=' . $id_new . '&add_cat=1" enctype="multipart/form-data" target="iframeOutNews" method="post" name="form_add_cat" class="form_add_cat"  >';

        $this->_html .= $this->displayFlags($languages, $defaultLanguage, $divLangName, 'cat', true);
        foreach ($languages as $language) {
            $this->_html .= ' <div  id="cat_' . $language['id_lang'] . '" style="display: ' . ($language['id_lang'] == $defaultLanguage ? 'block' : 'none') . ';float: left;" >
                                                        <input type="text" name="body_cat_' . $language['id_lang'] . '" id="body_cat_' . $language['id_lang'] . '" size="20"  value=""  />
                                              </div>';
        }
        $this->_html .= '  <a href="javascript:if(add_cat(\'' . $this->l('The translation in language default is empty  ') . ' [' . strtoupper(Language::getIsoById($defaultLanguage)) . ']\',\'' . $defaultLanguage . '\')){ document.form_add_cat.submit();}">
                                                         <img src="../img/admin/add.gif" alt="' . $this->l('Add tag ') . '" class="middle addTag">
                                               </a>
											   <input type="submit" name="btnsubmit" style="visibility:hidden;width:1px;height:1px;">
                                           </form>
                                         </div>
                                       <div id="newsCatContent" class="newsCatContent" style="display:block;width:190px;height:215px;overflow:auto;">
                                           <center><img src="../modules/news/img/loading.gif"></center>
                                           <script>news_ajax("newsCatContent","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_list_cat=1&id_news=' . $id_new . '");</script>
                                       </div> ';
        $this->_html .= '  </fieldset>
                        </div>';

        // block tags
        $this->_html .=' <div style="float:right;display:inline-block;width:220px;margin-top:20px;" >
                                <fieldset  style="background:#fff;">
                                    <legend  style="font-size:10px;">' . $this->l('Tags') . '</legend>';
        //add new tag
        $this->_html .=' <div style="padding-bottom:15px;display:inline-block;" class="translatable">
                                          <form action="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&id_news=' . $id_new . '&add_tag=1" enctype="multipart/form-data" target="iframeOutNews" method="post" name="form_add_tag" class="form_add_tag"  >';

        $this->_html .= $this->displayFlags($languages, $defaultLanguage, $divLangName, 'tag', true);
        foreach ($languages as $language) {
            $this->_html .= ' <div  id="tag_' . $language['id_lang'] . '" style="display: ' . ($language['id_lang'] == $defaultLanguage ? 'block' : 'none') . ';float: left;" >
                                                        <input type="text" name="body_tag_' . $language['id_lang'] . '" id="body_tag_' . $language['id_lang'] . '" size="20"  value=""  />
                                              </div>';
        }
        $this->_html .= '  <a href="javascript:if(add_tag(\'' . $this->l('The translation in language default is empty  ') . ' [' . strtoupper(Language::getIsoById($defaultLanguage)) . ']\',\'' . $defaultLanguage . '\')){ document.form_add_tag.submit();}">
                                                         <img src="../img/admin/add.gif" alt="' . $this->l('Add tag ') . '" class="middle addTag">
                                               </a>
											   <input type="submit" name="btnsubmit" style="visibility:hidden;width:1px;height:1px;">
                                           </form>
                                         </div>
                                       <div id="newsTagsContent" class="newsTagsContent" style="display:block;width:190px;height:540px;overflow:auto;">
                                           <center><img src="../modules/news/img/loading.gif"></center>
                                           <script>news_ajax("newsTagsContent","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_list_tags=1&id_news=' . $id_new . '");</script>
                                       </div> ';
        $this->_html .= '  </fieldset>
                        </div>
                        </div>';




        $this->_html .=' <div style="display:inline-block;width:660px;margin:10px 0;" >
                                <fieldset style="background:#fff;">
                                    <legend  style="font-size:10px;">' . $this->l('Images') . '</legend>
									<div class="newsBlockImagsAdd">
											<div class="newsUploadInput">
												 <form action="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&id_news=' . $id_new . '&upload_imag=1" enctype="multipart/form-data" onsubmit="submit_upload_imag()" target="iframeOutNews" method="post" name="form_upload_img" >
													' . $this->l('File') . ' <input type="file" id="image_new" name="image_new"> <input type="submit" value="' . $this->l('Upload') . '" name="newsBtnUpload"  class="button">
													<p>' . $this->l('Format: JPG, GIF, PNG. Filesize: 2000Kb max.') . '</p>
													<input type="submit" name="btnsubmit" style="visibility:hidden;width:1px;height:1px;">
												</form>
											</div>
											<div class="newsUploadStatusAjax" id="newsUploadStatusAjax"></div>
									</div>	
									<div class="newsBlockImagsRel" id="newsBlockImagsRel"><script>get_imgs_rel("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_rel=' . $id_new . '");</script></div>	
									<div class="newsBlockImagsArq" id="newsBlockImagsArq"><script>get_imgs_arq("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_arq=' . $id_new . '");</script></div>
							   </fieldset>
					     </div>';




        $this->_html .=' <div style="display:inline-block;width:900px;margin:20px 0;" >
                                <fieldset style="background:#fff;">
                                    <legend  style="font-size:10px;">' . $this->l('Related News') . '</legend>
									<div class="newsBlockNewsRel" id="newsBlockNewsRel"><script>news_ajax("newsBlockNewsRel","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_news_rel=' . $id_new . '");</script></div>
									<div class="newsBlockNewsList" id="newsBlockNewsList"><script>news_ajax("newsBlockNewsList","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_news_rel_list=' . $id_new . '");</script></div>
								</fieldset>
					     </div>';



        $this->_html .=' <div style="display:inline-block;width:900px;margin:20px 0;" >
                                <fieldset style="background:#fff;">
                                    <legend  style="font-size:10px;">' . $this->l('Related Products') . '</legend>
									<div class="newsBlockProdRel" id="newsBlockProdRel"><script>news_ajax("newsBlockProdRel","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_prod_rel=' . $id_new . '");</script></div>
									<div class="newsBlockProdArq" id="newsBlockProdArq"><script>news_ajax("newsBlockProdArq","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_tree_arq=' . $id_new . '");</script></div>
									<div class="newsBlockProdArqList" id="newsBlockProdArqList"><script>news_ajax(\'newsBlockProdArqList\',\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_prod_cat=0&id_new=' . $id_new . '\');</script></div>

								</fieldset>
					     </div>';




        // [END]FORM ADD EDIT --------------
        $this->_html .='
                     </fieldset>
						
						 <div style="float:left;padding:20px 0px 30px 0px;">';

        $this->_html.='		<input type="button" style="margin-right:30px;" onclick="parent.location=\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '\'" name="submitAsearch"
                                                        value=" ' . $this->l(' Go back ') . ' " class="button"> ';

        if (isset($new_draft)) {
            $this->_html.='		<input type="button" style="margin-right:30px;" onclick="if(confirm(\'' . $this->l(' Do you want to delete this Draft? ') . '\')){parent.location=\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&delete_draft=' . $id_new . '\';}" name="submitAsearch"
                                                        value=" ' . $this->l(' Go back and Delete Draft ') . ' " class="button"> ';
        }


        $this->_html.='
                             <input type="button" style="margin-left:170px;padding-left: 25px;padding-right: 25px;" onclick="submitformNew();" name="submitAsearch" value=" ' . $this->l('Save') . ' " class="button">
						
						 </div>
					 
             ';
    }

    // ACTIONS BACKOFFICE ------------------------------------


    private function addNewsRel($id_new = 0, $id_news_rel = 0) {

        $query = 'SELECT count(`id`) AS total FROM `' . _DB_PREFIX_ . 'news_rel` WHERE id_news = "' . $id_new . '" AND id_news_rel="' . $id_news_rel . '" ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        if (intval($rs[0]['total']) <= 0) {


            $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news_rel (`id_news`,`id_news_rel`)  VALUES("' . $id_new . '","' . $id_news_rel . '"); ';
            $rs = Db::getInstance()->Execute($query);
        }
        echo '<script>
                   news_ajax("newsBlockNewsRel","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_news_rel=' . $id_new . '");
              </script>';

        exit;
    }

    /*
     *
     *
     *
     */

    private function deleteNewsRel($id_new = 0, $id_news_rel = 0) {

        $query = 'SELECT count(id_news_rel) AS total FROM ' . _DB_PREFIX_ . 'news_rel WHERE id_news = "' . $id_new . '" AND id_news_rel="' . $id_news_rel . '" ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        if (intval($rs[0]['total']) > 0) {

            $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_rel WHERE  id_news = "' . $id_new . '" AND id_news_rel="' . $id_news_rel . '" ; ';
            $rs = Db::getInstance()->Execute($query);
        }
        echo "<script>
                    news_ajax(\"newsBlockNewsRel\",\"?tab=AdminModules&configure={$this->name}&token={$_REQUEST['token']}&news_ajax=1&get_news_rel={$id_new}\");
              </script>";

        exit;
    }

    /*
     *
     *
     *
     */

    private function getNewsRel($id_new = 0, $params) {

        global $cookie;

        $news_rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                    SELECT a.id_news_rel AS id_news_rel, a.id_news, b.date  FROM
                            ' . _DB_PREFIX_ . 'news_rel a,
                            ' . _DB_PREFIX_ . 'news b
                    WHERE  a.id_news = "' . $id_new . '" AND a.id_news_rel=b.id_news ORDER BY b.date DESC; ');

        if ($news_rs) {
            foreach ($news_rs AS $new) {
                $trads = $this->getTranslations($new['id_news_rel']);
                echo "<div class='relNewsRight'>
							<a href='javascript:void(0);' onclick='news_ajax(\"newsBlockNewsRel\",\"?tab=AdminModules&configure={$this->name}&token={$_REQUEST['token']}&news_ajax=1&delete_news_rel={$new['id_news']}&id_news_rel={$new['id_news_rel']}\");' class='removeNewsRel'>
								<img style='cursor: pointer;' src='../img/admin/disabled.gif'>
							</a>
							<div class='removeNewsRelTitle'> 
								<b>" . date('d/m/Y', $new['date']) . "</b> - " . Tools::truncate($trads[$params['cookie']->id_lang]['title'], 150) . " 
							</div>";
                echo "</div>";
            }
        }

        if (empty($news_rs)) {
            echo "<div style='display:block;padding:20px;font-size: 11px;color: #400;text-align:center;' >
                                   <br><br><br><br> <img src='../img/admin/warning.gif'><br>
                                    <br>" . $this->l('No related articles') . "
                              </div>";
        }
    }

    /*
     *
     *
     *
     */

    private function getNewsRelList($id_new = 0, $params) {

        global $cookie;

        $news_rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                    SELECT id_news, date  FROM
                            ' . _DB_PREFIX_ . 'news WHERE active=1 AND 
						    id_news NOT IN (SELECT id_news_rel AS id_news FROM `' . _DB_PREFIX_ . 'news_rel` WHERE id_news_rel = "' . $id_new . '" )
                    ORDER BY id_news DESC; ');


        if (!empty($news_rs)) {
            foreach ($news_rs AS $new) {
                $trads = $this->getTranslations($new['id_news']);

                echo "<div class='relNewsRight'>
							<a href='javascript:void(0);' onclick='news_ajax(\"newsBlockNewsRel\",\"?tab=AdminModules&configure={$this->name}&token={$_REQUEST['token']}&news_ajax=1&add_news_rel={$id_new}&id_news_rel={$new['id_news']}\");' class='removeNewsRel'>
								<img style='cursor: pointer;' src='../img/admin/add.gif'>
							</a>
							<div class='removeNewsRelTitle'> 
								<b>" . date('d/m/Y', $new['date']) . "</b> - " . Tools::truncate($trads[$params['cookie']->id_lang]['title'], 150) . " 
							</div>";
                echo "</div>";
            }
        }

        if (empty($news_rs)) {
            echo "<div style='display:block;padding:20px;font-size: 11px;color: #400;text-align:center;' >
                                   <br><br><br><br> <img src='../img/admin/warning.gif'><br>
                                   <br> " . $this->l('No articles') . "
                              </div>";
        }
    }

    /*
     * 
     * 
     */

    private function downProdRel($id_product = 0, $id_new = 0) {

        if ($id_product > 0 && $id_new > 0) {
            $query = 'SELECT pos FROM `' . _DB_PREFIX_ . 'news_products`
                            WHERE id_news="' . intval($id_new) . '" AND id_product="' . $id_product . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $pos = intval($rs[0]['pos']);
            $query = 'SELECT max(pos) AS max FROM `' . _DB_PREFIX_ . 'news_products`
                            WHERE id_news="' . intval($id_new) . '"   ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $max = intval($rs[0]['max']);

            if ($pos < $max) {
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_products` SET pos=pos+1
                                    WHERE  id_news="' . intval($id_new) . '" AND  id_product="' . $id_product . '"   ';
                $rs = Db::getInstance()->Execute($query);

                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_products` SET pos=pos-1
                                    WHERE  id_news="' . intval($id_new) . '" AND
                                           id_product!="' . $id_product . '" AND
                                           pos="' . ($pos + 1) . '" ; ';
                $rs = Db::getInstance()->Execute($query);
            }
        }
        echo '<script>
                    news_ajax("newsBlockProdRel","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_prod_rel=' . $id_new . '");
              </script>';
        exit;
    }

    /*
     *
     *
     *
     */

    private function upProdRel($id_product = 0, $id_new = 0) {

        if ($id_product > 0 && $id_new > 0) {
            $query = 'SELECT pos FROM `' . _DB_PREFIX_ . 'news_products`
                            WHERE id_news="' . intval($id_new) . '" AND id_product="' . $id_product . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $pos = intval($rs[0]['pos']);

            if ($pos >= 2) {
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_products`  SET   pos=pos-1
                                    WHERE  id_news="' . intval($id_new) . '" AND  id_product="' . $id_product . '"   ';
                $rs = Db::getInstance()->Execute($query);

                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_products`  SET   pos=pos+1
                                    WHERE  id_news="' . intval($id_new) . '" AND
                                           id_product!="' . $id_product . '" AND
                                           pos="' . ($pos - 1) . '" ; ';
                $rs = Db::getInstance()->Execute($query);
            }
        }
        echo '<script>
                    news_ajax("newsBlockProdRel","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_prod_rel=' . $id_new . '");
              </script>';
        exit;
    }

    /*
     *
     *
     *
     */

    private function deleteProdRel($id_product = 0, $id_new = 0) {

        $query = 'SELECT count(`id`) AS total FROM `' . _DB_PREFIX_ . 'news_products` WHERE id_news = "' . $id_new . '" AND id_product="' . $id_product . '" ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        if (intval($rs[0]['total']) > 0) {

            $query = 'SELECT max(`pos`) AS pos FROM `' . _DB_PREFIX_ . 'news_products` WHERE id_news = "' . $id_new . '" AND id_product="' . $id_product . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

            $pos = intval($rs[0]['pos']);

            $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_products  WHERE id_news="' . $id_new . '" AND id_product="' . $id_product . '" ; ';
            $rs = Db::getInstance()->Execute($query);


            $query = 'UPDATE ' . _DB_PREFIX_ . 'news_products SET pos=pos-1 WHERE  id_news = "' . $id_new . '" AND pos>"' . $pos . '" ; ';
            $rs = Db::getInstance()->Execute($query);
        }
        echo '<script>
                    news_ajax("newsBlockProdRel","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_prod_rel=' . $id_new . '");
              </script>';

        exit;
    }

    /*
     *
     *
     *
     */

    private function addProdRel($id_product = 0, $id_new = 0) {

        $query = 'SELECT count(`id`) AS total FROM `' . _DB_PREFIX_ . 'news_products` WHERE id_news = "' . $id_new . '" AND id_product="' . $id_product . '" ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        if (intval($rs[0]['total']) <= 0) {

            $query = 'SELECT max(`pos`) AS pos FROM `' . _DB_PREFIX_ . 'news_products` WHERE id_news = "' . $id_new . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

            $pos = intval($rs[0]['pos']);

            $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news_products (`id_news`,`id_product`,`pos`)  VALUES("' . $id_new . '","' . $id_product . '","1" ); ';
            $rs = Db::getInstance()->Execute($query);

            $query = 'UPDATE ' . _DB_PREFIX_ . 'news_products SET pos=pos+1 WHERE  id_news = "' . $id_new . '" AND id_product!="' . $id_product . '" ; ';
            $rs = Db::getInstance()->Execute($query);
        }
        echo '<script>
                    news_ajax("newsBlockProdRel","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_prod_rel=' . $id_new . '");
              </script>';

        exit;
    }

    /*
     *
     *
     *
     */

    private function getProdRel($id_new = 0, $params) {

        global $link, $cookie, $js_files;
        $html = '';

        $list_products_rel = $this->getProductsRel($id_new);
        $products_list = Array();
        if (count($list_products_rel) > 0) {

            $query = '
                    SELECT  p.id_product,  p.active, pl.name, pl.description_short, pl.link_rewrite,po.pos
                    FROM ' . _DB_PREFIX_ . 'product p
                    LEFT JOIN ' . _DB_PREFIX_ . 'product_lang pl ON (pl.id_product = p.id_product)
                    LEFT JOIN ' . _DB_PREFIX_ . 'news_products po ON (po.id_product = p.id_product )
                    WHERE p.id_product IN (' . implode(',', $list_products_rel) . ')
                    AND po.id_news = "' . $id_new . '"
                    AND pl.id_lang = ' . (int) ($params['cookie']->id_lang) . ' ORDER BY po.pos ASC ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            if ($rs) {
                foreach ($rs AS $pi) {
                    $products_list[] = $pi;
                }
                $count = 1;
                if ($products_list) {
                    foreach ($products_list AS &$newsProducts) {
                        $html.= "<div class='newsCatProdBlockRel'>

                                      <div class='newsCatProdBlockRel_action'> ";
                        if ($count > 1 && $count <= count($products_list)) {
                            $html.= "              <a href='javascript:void(0);' onclick='news_ajax(\"newsBlockProdRel\",\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&up_prod_rel=" . $newsProducts['id_product'] . "&id_new=" . $id_new . "\");'><img src='../img/admin/up.gif' ></a>";
                        }
                        $html.= "                  <br>";
                        if ($count < count($products_list)) {
                            $html.= "              <a href='javascript:void(0);' onclick='news_ajax(\"newsBlockProdRel\",\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&down_prod_rel=" . $newsProducts['id_product'] . "&id_new=" . $id_new . "\");'><img src='../img/admin/down.gif' ></a>";
                        }
                        $html.= "                   <br>
                                      </div>
                                      <div class='newsCatProdBlock_img' style='background:url(" . Tools::getShopDomain(true) . __PS_BASE_URI__ . "img/tmp/product_mini_" . $newsProducts['id_product'] . "_1.jpg) no-repeat center center'>

                                      </div>
                                      <div class='newsRelProdBlock_text'>
                                         " . Tools::truncate(htmlspecialchars($newsProducts['name'], ENT_COMPAT, 'UTF-8'), 100) . "
                                      </div>
                                       <div class='newsCatProdBlockRel_action2'>
                                               <a href='javascript:void(0);' onclick='news_ajax(\"newsBlockProdRel\",\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&delete_prod_rel=" . $newsProducts['id_product'] . "&id_new=" . $id_new . "\");'
                                                   ><img  style='cursor: pointer;' src='../img/admin/disabled.gif'></a>
                                      </div>
                                  </div>";
                        $count++;
                    }
                }
            }
        }
        if (count($products_list) <= 0) {
            $html.= "<div style='display:block;padding:20px;font-size: 11px;color: #400;text-align:center;' >
                                   <br><br><br><br> <img src='../img/admin/warning.gif'><br>
                                    <br>" . $this->l('No related products') . "
                              </div>";
        }

        echo $html;
    }

    /*
     *
     *
     *
     *
     */

    private function getProdsCategory($id_category = 0, $id_new = 0, $params) {

        global $link, $cookie;

        $html = '';

        $category = $id_category ? $id_category : 1;

        $category = new Category($category, Configuration::get('PS_LANG_DEFAULT'));

        $context = Context::getContext();
        $context->customer = new Customer(0);
        $context->customer->id = '';
        $products = $category->getProducts((int) ($params['cookie']->id_lang), 1, 10000, null, null, false, true, false, 1, true, $context);


        $list_products_rel = $this->getProductsRel($id_new);

        $count = 0;

        if (!empty($products)) {
            foreach ($products AS &$newsProducts) {
                if (!in_array($newsProducts['id_product'], $list_products_rel)) {

                    $html.= "<a href='javascript:void(0);' onclick='news_ajax(\"newsBlockProdRel\",\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&add_prod_rel=" . $newsProducts['id_product'] . "&id_new=" . $id_new . "\");'  class='newsCatProdBlock'>
										  <div class='newsCatProdBlock_action'>
											 <center><img  style='cursor: pointer;' src='../img/admin/add.gif' valign='middle'></center>
										  </div>
										  <div class='newsCatProdBlock_img' style='background:url(" . Tools::getShopDomain(true) . __PS_BASE_URI__ . "img/tmp/product_mini_" . $newsProducts['id_product'] . "_1.jpg) no-repeat center center'>

										  </div>
										  <div class='newsCatProdBlock_text'>
											 " . Tools::truncate(htmlspecialchars($newsProducts['name'], ENT_COMPAT, 'UTF-8'), 50) . "
										  </div>
									 </a>";
                    $count++;
                }
            }
        }

        if ($count <= 0) {
            $html.= "<div style='display:block;padding:20px;font-size: 11px;color: #400;text-align:center;' >
                                    <img src='../img/admin/warning.gif'><br>
                                    " . $this->l('No products in category') . "
                              </div>";
        }

        echo $html;
    }

    /*
     *
     *
     *
     */

    private function renderAdminCategorieTree($id_new = 0) {


        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));

        if (!$result = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
				SELECT c.id_parent, c.id_category, cl.name, cl.description, cl.link_rewrite
				FROM `' . _DB_PREFIX_ . 'category` c
				LEFT JOIN `' . _DB_PREFIX_ . 'category_lang` cl ON (c.`id_category` = cl.`id_category` AND `id_lang` = ' . $defaultLanguage . ')
				WHERE (c.`active` = 1 OR c.`id_category` = 1)
				GROUP BY id_category
				ORDER BY `level_depth` ASC, c.`position` ASC')
        )
            return;

        $resultParents = array();
        $resultIds = array();
        if ($result) {
            foreach ($result as &$row) {
                $resultParents[$row['id_parent']][] = &$row;
                $resultIds[$row['id_category']] = &$row;
            }
        }

        $blockCategTree = $this->getTree($resultParents, $resultIds, 0);

        unset($resultParents);
        unset($resultIds);

        $this->_html .='<link type="text/css" rel="stylesheet" href="../js/jquery/plugins/treeview-categories/jquery.treeview-categories.css" />
                        <div style="display:block;padding:5px 5px;font-size:10px;background-color:#DFD5C3;">
                            ' . $this->l('Select the Category') . '
                        </div>
                        ';

        $this->_html .='<ul id="categories-treeview" class="filetree treeview">
                                        <li>
                                            <a style="padding-left:6px;" ';

        $this->_html .='href="javascript:void(0);" onclick="news_ajax(\'newsBlockProdArqList\',\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_prod_cat=0&id_new=' . $id_new . '\');"  ';

        $this->_html .=' title="' . $blockCategTree['name'] . '">
                                                    ' . $blockCategTree['name'] . '
                                             </a>';
        $this->_html .= $this->recCild($blockCategTree['children'], $id_new);
        $this->_html .='</li>
                                        </ul>
                        ';
        echo $this->_html;
    }

    /*
     *
     *
     *
     *
     *
     *
     */

    private function recCild($tree = Array(), $id_new = 0) {
        $i = 0;
        $html = '';
        if ($tree) {
            foreach ($tree AS $child) {

                if ($i == 0) {
                    $html = "<ul>";
                    $i++;
                }
                $html .='<li>
                            <a style="padding-left:6px;" 
							   href="javascript:void(0);" 
							   onclick="news_ajax(\'newsBlockProdArqList\',\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_prod_cat=' . $child['id'] . '&id_new=' . $id_new . '\');" 
							 >' . $child['name'] . '</a>';
                $html .= $this->recCild($child['children'], $id_new);
                $html .= '</li>';
            }
        }

        return ($html ? ($html . '</ul>') : '');
    }

    /*
     *
     *
     *
     *
     *
     *
     *
     */

    private function getTree($resultParents, $resultIds, $maxDepth, $id_category = 1, $currentDepth = 0) {

        $children = array();
        if (isset($resultParents[$id_category]) AND sizeof($resultParents[$id_category]) AND ($maxDepth == 0 OR $currentDepth < $maxDepth)) {
            if ($resultParents[$id_category]) {
                foreach ($resultParents[$id_category] as $subcat)
                    $children[] = $this->getTree($resultParents, $resultIds, $maxDepth, $subcat['id_category'], $currentDepth + 1);
            }
        }
        if (!isset($resultIds[$id_category]))
            return false;
        return array('id' => $id_category, 'link' => $this->context->link->getCategoryLink($id_category, $resultIds[$id_category]['link_rewrite']),
            'name' => $resultIds[$id_category]['name'], 'desc' => $resultIds[$id_category]['description'],
            'children' => $children);
    }

    /*
     *
     * 
     * 
     * 
     * 
     *
     *
     */

    private function image_delete_arq($id_img = 0, $id_new = 0, $unistall = 0) {

        if ($id_img > 0) {

            $query = 'SELECT id_news FROM `' . _DB_PREFIX_ . 'news_imgs_rel`
                            WHERE id_img = "' . intval($id_img) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            if ($rs) {
                foreach ($rs AS $key => $value) {
                    $this->image_delete_rel($id_img, $value['id_news'], false);
                }
            }

            $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_imgs where id_img="' . intval($id_img) . '"   ';
            $rs = Db::getInstance()->Execute($query);

            foreach ($this->_imagesSizes AS $key => $value) {
                unlink(_PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '-' . $key . '.jpg');
            }

            unlink(_PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '.jpg');
            unlink(_PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '-slider.jpg');
        }
        if ($unistall == 0) {
            echo ' <script>
						get_imgs_rel("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_rel=' . $id_new . '");
						get_imgs_arq("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_arq=' . $id_new . '");
				  </script>';
        }
    }

    /*
     *
     *
     *
     */

    private function add_images_rel($id_img = 0, $id_new = 0) {

        $query = 'SELECT count(id_news) AS total FROM `' . _DB_PREFIX_ . 'news_imgs_rel`
                            WHERE id_news="' . intval($id_new) . '" AND id_img = "' . intval($id_img) . '"  ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
        $total = intval($rs[0]['total']);

        if ($id_new > 0 && $id_img > 0 && $total == 0) {

            $query = '  UPDATE `' . _DB_PREFIX_ . 'news_imgs_rel`  SET   pos=pos+1
                                    WHERE  id_news="' . intval($id_new) . '"  ';
            $rs = Db::getInstance()->Execute($query);

            $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news_imgs_rel (`id_img`,`id_news`,`pos`)  VALUES("' . $id_img . '", "' . $id_new . '","1" ); ';
            $rs = Db::getInstance()->Execute($query);
        }

        echo ' <script>get_imgs_rel("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_rel=' . $id_new . '");</script>';
    }

    /*
     *
     *
     *
     */

    private function image_delete_rel($id_img = 0, $id_new = 0, $ajax = TRUE) {

        if ($id_new > 0 && $id_img > 0) {

            $query = 'SELECT pos FROM `' . _DB_PREFIX_ . 'news_imgs_rel`
                            WHERE id_news="' . intval($id_new) . '" AND id_img = "' . intval($id_img) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $pos = intval($rs[0]['pos']);

            $query = '  UPDATE `' . _DB_PREFIX_ . 'news_imgs_rel`  SET   pos=pos-1
                                    WHERE  id_news="' . intval($id_new) . '" AND pos>"' . ($pos) . '" AND id_img!="' . $id_img . '" ';
            $rs = Db::getInstance()->Execute($query);

            $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_imgs_rel where id_news="' . intval($id_new) . '" AND id_img = "' . intval($id_img) . '"  ';
            $rs = Db::getInstance()->Execute($query);
        }

        if ($ajax) {
            echo ' <script>
                        get_imgs_rel("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_rel=' . $id_new . '");
                   </script>';
        }
    }

    /*
     *
     *
     *
     */

    private function image_down($id_img = 0, $id_new = 0) {

        if ($id_new > 0 && $id_img > 0) {

            $query = 'SELECT pos FROM `' . _DB_PREFIX_ . 'news_imgs_rel`
                            WHERE id_news="' . intval($id_new) . '" AND id_img = "' . intval($id_img) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $pos = intval($rs[0]['pos']);

            $query = 'SELECT count(id_rel) AS total FROM `' . _DB_PREFIX_ . 'news_imgs_rel`
                            WHERE id_news="' . intval($id_new) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $total = intval($rs[0]['total']);

            if ($pos < $total) {
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_imgs_rel`  SET   pos=pos-1
                                    WHERE  id_news="' . intval($id_new) . '" AND pos="' . ($pos + 1) . '" AND id_img!="' . $id_img . '" ';
                $rs = Db::getInstance()->Execute($query);
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_imgs_rel`  SET   pos=pos+1
                                    WHERE  id_news="' . intval($id_new) . '" AND id_img="' . $id_img . '"  ';
                $rs = Db::getInstance()->Execute($query);
            }
        }
        echo ' <script>get_imgs_rel("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_rel=' . $id_new . '");</script>';
    }

    /*
     *
     *
     *
     */

    private function image_up($id_img = 0, $id_new = 0) {

        if ($id_new > 0 && $id_img > 0) {
            $query = 'SELECT pos FROM `' . _DB_PREFIX_ . 'news_imgs_rel`
                            WHERE id_news="' . intval($id_new) . '" AND id_img = "' . intval($id_img) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $pos = intval($rs[0]['pos']);

            if ($pos >= 2) {
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_imgs_rel`  SET   pos=pos+1
                                    WHERE  id_news="' . intval($id_new) . '" AND pos="' . ($pos - 1) . '" AND id_img!="' . $id_img . '" ';
                $rs = Db::getInstance()->Execute($query);

                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_imgs_rel`  SET   pos=pos-1
                                    WHERE  id_news="' . intval($id_new) . '" AND id_img="' . $id_img . '"  ';
                $rs = Db::getInstance()->Execute($query);
            }
        }
        echo ' <script>get_imgs_rel("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_rel=' . $id_new . '");</script>';
    }

    /*
     *
     *
     *
     */

    private function get_images_arq($id_new = 0) {

        $query = 'SELECT * FROM `' . _DB_PREFIX_ . 'news_imgs` order by id_img DESC; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $i = 1;
        if ($rs) {
            foreach ($rs AS $key => $value) {
                echo " <div class='newsImgsArq' >
						<div class='newsImgsArqContent'>
							<img src='" . $this->url_to_module . "/imgs/" . $value['id_img'] . "-sides." . $this->_imageType . "' width='95' height='45' >
						</div>
                        <div class='newsImgsArqActions'>

                             <a href='javascript:void(0);' onclick='get_imgs_rel(\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&add_images_rel=" . $value['id_img'] . "&id_new=" . $id_new . "\")'>
                                  <img src='../img/admin/add.gif' >
                             </a>
                             <a href='javascript:void(0);' onclick='delete_imgs_arq(\"" . $this->l('Are you sure that you want to remove this image from ARCHIVE?') . "\",\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&image_delete_arq=" . $value['id_img'] . "&id_new=" . $id_new . "\")'>
                                 <img src='../img/admin/delete.gif' >
                             </a> 

                        </div>
                  </div>";
                $i++;
            }
        }

        if ($i <= 1) {
            echo "<div class='noImagesRel'><img src='../img/admin/warning.gif'><br>" . $this->l('No images in Archive') . "</div>";
        }
    }

    /*
     *
     *
     *
     */

    private function get_images_rel($id_new = 0) {

        $query = 'SELECT * FROM `' . _DB_PREFIX_ . 'news_imgs_rel` WHERE id_news="' . $id_new . '" order by pos ASC; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $i = 1;
        if ($rs) {
            foreach ($rs AS $key => $value) {
                echo " <div class='newsImgsRel' >
						<div class='newsImgsRelContent'>
							<img src=" . $this->url_to_module . "/imgs/" . $value['id_img'] . "-sides." . $this->_imageType . ">
						</div>
                        <div class='newsImgsRelActions'>
                             <a href='javascript:void(0);' onclick='get_imgs_rel(\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&image_delete_rel=" . $value['id_img'] . "&id_new=" . $id_new . "\")'>
                                                <img src='../img/admin/disabled.gif' >
                             </a>
                             <br><br> ";

                if ($i > 1) {
                    echo "<a href='javascript:void(0);' onclick='get_imgs_rel(\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&news_images_pos=" . $value['id_img'] . "&up=1&id_new=" . $id_new . "\")'>
                                                <img src='../img/admin/up.gif' >
                                        </a>";
                }
                if ($i < count($rs)) {
                    echo "
                                        <a href='javascript:void(0);' onclick='get_imgs_rel(\"?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&news_images_pos=" . $value['id_img'] . "&id_new=" . $id_new . "\")'>
                                                <img src='../img/admin/down.gif' >
                                        </a>";
                }


                echo "</div>
                  </div>";
                $i++;
            }
        }
        if ($i <= 1) {
            echo "<div class='noImagesRel'><img src='../img/admin/warning.gif'><br>" . $this->l('No related images') . "</div>";
        }
    }

    /*
     *
     *
     *
     *
     *
     */

    private function upload_imag($id_news = 0) {
        $progress = 0;
        if (intval($_FILES['image_new']['size']) == 0) {
            $this->alertUploadAjax($this->l(' No image to upload '));
            exit;
        }
        if ($_FILES['image_new']['size'] > $this->_maxImageSize) {
            $this->alertUploadAjax($this->l('Image is too large Maximum allowed: ') . ($this->_maxImageSize / 1000) . 'KB');
            exit;
        }
        $version = explode('.', _PS_VERSION_);


        // new versions 1.5.4
        if (
                ( intval($version[0]) > 1 ) ||
                ( intval($version[0]) == 1 && intval($version[1]) > 5 ) ||
                ( intval($version[0]) == 1 && intval($version[1]) >= 5 && intval($version[2]) > 3 )
        ) {

            Configuration::set('PS_IMAGE_GENERATION_METHOD', 1);
            if ($error = ImageManager::validateUpload($_FILES['image_new'])) {
                $this->alertUploadAjax($error);
                exit;
            }


            $query = 'SELECT max(`id_img`) AS next FROM `' . _DB_PREFIX_ . 'news_imgs`  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

            $id_img = intval($rs[0]['next']) + 1;

            foreach ($this->_imagesSizes AS $key => $value) {
                if (!ImageManager::resize($_FILES['image_new']['tmp_name'], _PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '-' . $key . '.' . $this->_imageType, $value[0], $value[1], $this->_imageType, true)) {
                    $this->alertUploadAjax($this->l('An error occurred during the image upload.'));
                }
            }

            if (!ImageManager::resize($_FILES['image_new']['tmp_name'], _PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '-slider.' . $this->_imageType, intval(Configuration::get('NEWS_SLIDESHOW_WIDTH')), intval(Configuration::get('NEWS_SLIDESHOW_HEIGHT')), $this->_imageType, true)) {
                $this->alertUploadAjax($this->l('An error occurred during the image upload.'));
            }

            list($width, $height, $type, $attr) = getimagesize($_FILES['image_new']['tmp_name']);


            if (!ImageManager::resize($_FILES['image_new']['tmp_name'], _PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '.' . $this->_imageType, $width, $height, $this->_imageType, true)) {
                $this->alertUploadAjax($this->l('An error occurred during the image upload.'));
            }
        } else {

            if (!isPicture($_FILES['image_new'])) {
                $this->alertUploadAjax($this->l('Image format not recognized, allowed formats are: .gif, .jpg, .png'));
                exit;
            }


            $query = 'SELECT max(`id_img`) AS next FROM `' . _DB_PREFIX_ . 'news_imgs`  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

            $id_img = intval($rs[0]['next']) + 1;

            foreach ($this->_imagesSizes AS $key => $value) {
                imageResize($_FILES['image_new']['tmp_name'], _PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '-' . $key . '.' . $this->_imageType, $value[0], $value[1], $this->_imageType);
            }

            imageResize($_FILES['image_new']['tmp_name'], _PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '-slider.' . $this->_imageType, intval(Configuration::get('NEWS_SLIDESHOW_WIDTH')), intval(Configuration::get('NEWS_SLIDESHOW_HEIGHT')), $this->_imageType);

            list($width, $height, $type, $attr) = getimagesize($_FILES['image_new']['tmp_name']);


            imageResize($_FILES['image_new']['tmp_name'], _PS_ROOT_DIR_ . '/modules/' . $this->name . '/imgs/' . $id_img . '.' . $this->_imageType, $width, $height, $this->_imageType);
        }
        $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news_imgs (`id_img`)  VALUES("' . $id_img . '"); ';
        $rs = Db::getInstance()->Execute($query);

        // add no new
        if ($id_news) {

            $query = '  UPDATE `' . _DB_PREFIX_ . 'news_imgs_rel`  SET   pos=pos+1
                                WHERE  id_news="' . intval($id_news) . '" ';
            $rs = Db::getInstance()->Execute($query);

            $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news_imgs_rel (`id_news`,`id_img`,`pos`)  VALUES("' . $id_news . '","' . $id_img . '","1"); ';
            $rs = Db::getInstance()->Execute($query);
        }

        echo '<script> parent.$("#newsUploadStatusLoadind").html("<div class=\'conf confirm\'> ' . $this->l('Image Uploaded') . '</div>");</script>';
        echo '<script> parent.$("#image_new").val("");</script>';
        echo '<script> parent.$(".newsUploadLoadingImg").remove();</script>';
        echo '<script> parent.get_imgs_rel("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_rel=' . $id_news . '");</script>';
        echo '<script> parent.get_imgs_arq("?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&get_images_arq=' . $id_news . '");</script>';
    }

    /*
     *
     *
     *
     *
     *
     */

    private function alertUploadAjax($msg) {
        echo '<script> parent.$("#newsUploadStatusAjax").html("<div class=\'warn\'><img src=\'../img/admin/warn2.png\'>' . ($msg) . '</div>");</script>';
    }

    /*
     *
     *
     *
     */

    private function cat_down($id_cat = 0, $id_new = 0) {

        if ($id_cat > 0) {
            $query = 'SELECT pos FROM `' . _DB_PREFIX_ . 'news_cats`
                            WHERE id_cat="' . intval($id_cat) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $pos = intval($rs[0]['pos']);

            $query = 'SELECT max(pos) AS max FROM `' . _DB_PREFIX_ . 'news_cats` ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $max = intval($rs[0]['max']);

            if ($pos < $max) {
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_cats`  SET   pos=pos+1
                                    WHERE  id_cat="' . intval($id_cat) . '"  ';
                $rs = Db::getInstance()->Execute($query);
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_cats`  SET   pos=pos-1
                                    WHERE  id_cat!="' . intval($id_cat) . '" AND pos="' . ($pos + 1) . '"  ';
                $rs = Db::getInstance()->Execute($query);
                echo '<script> news_ajax("newsCatContent","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_list_cat=1&id_news=' . $id_new . '");</script>';
            }
        }
    }

    /*
     *
     *
     *
     */

    private function cat_up($id_cat = 0, $id_new = 0) {

        if ($id_cat > 0) {
            $query = 'SELECT pos FROM `' . _DB_PREFIX_ . 'news_cats`
                            WHERE id_cat="' . intval($id_cat) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
            $pos = intval($rs[0]['pos']);

            if ($pos >= 2) {
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_cats`  SET   pos=pos-1
                                    WHERE  id_cat="' . intval($id_cat) . '"  ';
                $rs = Db::getInstance()->Execute($query);
                $query = '  UPDATE `' . _DB_PREFIX_ . 'news_cats`  SET   pos=pos+1
                                    WHERE  id_cat!="' . intval($id_cat) . '" AND pos="' . ($pos - 1) . '"  ';
                $rs = Db::getInstance()->Execute($query);
                echo '<script> news_ajax("newsCatContent","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_list_cat=1&id_news=' . $id_new . '");</script>';
            }
        }
    }

    /*
     *
     *
     *
     */

    private function cat_addRemove($id_cat = 0, $id_new = 0) {

        $query = 'SELECT * FROM ' . _DB_PREFIX_ . 'news_cats_rel
                    where id_new="' . $id_new . '" AND id_cat="' . $id_cat . '" ';

        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $total = count($rs);
        if ($total > 0) {
            $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_cats_rel where id_new="' . $id_new . '" AND id_cat="' . $id_cat . '" ';
            $rs = Db::getInstance()->Execute($query);

            echo "<script>checkbox_tag('r'," . $id_cat . ")</script>";
        } else {
            $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news_cats_rel (`id_cat`,`id_new`)  VALUES("' . $id_cat . '", "' . $id_new . '" ); ';
            $rs = Db::getInstance()->Execute($query);

            echo "<script>parent.checkbox_cat('a'," . $id_cat . ")</script>";
        }
    }

    /*
     *
     *
     *
     */

    private function cat_list($id_new = 0) {

        $id_lang = (int) (Configuration::get('PS_LANG_DEFAULT'));
        $all_cat = $this->getCats(0, $id_lang);

        $cat_in_new = Array();
        if ($id_new > 0) {
            $cat = $this->getCats($id_new, $id_lang);
            if ($cat) {
                foreach ($cat AS $key => $value) {
                    $cat_in_new[] = $value->id;
                }
            }
        }
        $i = 0;
        if ($all_cat) {
            foreach ($all_cat AS $key => $value) {
                echo "<div id='list_cat_" . $value->id . "' class='cat_options'>
                      <div class='posCat'>";

                if ($i > 0 && count($all_cat) > 1) {
                    echo' <a href="javascript:void(0);"   onclick="pos_cat(\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_cat_up=' . $value->id . '&id_news=' . $id_new . '\',' . $value->id . ')" >
                                        <img src="../img/admin/up.gif" alt="' . $this->l('Up') . '" title="' . $this->l('Up') . '"></a>';
                }
                if (($i + 1) < count($all_cat) && count($all_cat) > 1) {
                    echo ' <a  href="javascript:void(0);"   onclick="pos_cat(\'?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_cat_down=' . $value->id . '&id_news=' . $id_new . '\',' . $value->id . ')">
                                          <img src="../img/admin/down.gif" alt="' . $this->l('Down') . '" title="' . $this->l('Down') . '"></a>';
                }

                echo "  </div>
                            <input type='checkbox' class='check_cat' id='check_cat_" . $value->id . "' " . (in_array($value->id, $cat_in_new) ? "checked='checked'" : '') . "
                         onclick=\"news_ajax('newsAjaxOut','?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&news_add_cat=" . $value->id . "&id_news=" . $id_new . "');\" >
                        <div class='cat_title'>
                                " . $value->title . "
                        </div>
                         <a class='cat_edit_img' id='cat_edit_img_" . $value->id . "' href=\"javascript:void(0);\" onclick=\"edit_cat('?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&edit_cat=" . $value->id . "&id_news=" . $id_new . "'," . $value->id . ");\">
                                    <img src='../img/admin/edit.gif' class='editCat' >
                        </a>
                        <a href=\"javascript:void(0);\" class='confirm_delete_cat'
                         onclick=\"confirm_delete_cat('" . $this->l('Do you want delete this Category from ALL NEWS?') . "','?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&news_delete_cat=" . $value->id . "&id_news=" . $id_new . "'," . $value->id . ");\">
                                    <img src='../img/admin/delete.gif' class='removeCat' id='cat_img_" . $value->id . "'>
                        </a>
                   </div> ";
                $i++;
            }
        }
        if ($i == 0) {
            echo "<div style='display:block;padding:20px;font-size: 11px;color: #400;text-align:center;' >
                                    <img src='../img/admin/warning.gif'><br>
                                    " . $this->l('No Categories') . "
                              </div>";
        }
    }

    /*
     *
     *
     *
     */

    private function cat_delete($id_cat = 0) {

        $query = 'SELECT pos FROM `' . _DB_PREFIX_ . 'news_cats`
                            WHERE id_cat="' . intval($id_cat) . '"  ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
        $pos = intval($rs[0]['pos']);
        $query = '  UPDATE `' . _DB_PREFIX_ . 'news_cats`  SET   pos=pos-1
                                WHERE  pos>"' . intval($pos) . '"  ';
        $rs = Db::getInstance()->Execute($query);
        $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_cats where id_cat="' . $id_cat . '" ';
        $rs = Db::getInstance()->Execute($query);
        $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_cats_rel where id_cat="' . $id_cat . '" ';
        $rs = Db::getInstance()->Execute($query);
        $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_cats_lang where id_cat="' . $id_cat . '" ';
        $rs = Db::getInstance()->Execute($query);

        echo "<script>delete_cat(" . $id_cat . ")</script>";
    }

    /*
     *
     *
     *
     */

    private function cat_add($id_new = 0) {

        $query = 'SELECT max(`id_cat`) AS total FROM `' . _DB_PREFIX_ . 'news_cats`  ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $id_cat = intval($rs[0]['total']) + 1;

        $query = 'SELECT max(`pos`) AS pos FROM `' . _DB_PREFIX_ . 'news_cats`  ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $pos = intval($rs[0]['pos']) + 1;

        $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news_cats (`id_cat`,`pos`)  VALUES("' . $id_cat . '","' . $pos . '" ); ';
        $rs = Db::getInstance()->Execute($query);

        $fieldsArray = array('title');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));

        // if the default laguege cam empty
        if (empty($_POST['body_cat_' . (int) ($defaultLanguage)])) {
            exit;
        }
        foreach ($languages as $language) {
            $fields[$language['id_lang']]['id_lang'] = (int) ($language['id_lang']);
            Db::getInstance()->Execute('
                           INSERT INTO `' . _DB_PREFIX_ . 'news_cats_lang`(
                                       `id_cat`, `id_lang`, `' . $fieldsArray[0] . '`)
                            VALUES( "' . $id_cat . '", ' . $language['id_lang'] . ',
                                     "' . pSQL((!empty($_POST['body_cat_' . (int) ($language['id_lang'])]) ?
                                    $_POST['body_cat_' . (int) ($language['id_lang'])] :
                                    $_POST['body_cat_' . (int) ($defaultLanguage)]), true) . '"
                                )');
        }


        echo '<script> parent.news_ajax("newsCatContent","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_list_cat=1&id_news=' . $id_new . '");
					   parent.add_remove_loading_cat();</script>';
        // add tag to new
        if ($id_new > 0) {
            $this->cat_addRemove($id_cat, $id_new);
        }
        exit;
    }

    /*
     *
     *
     *
     */

    private function cat_edit($id_cat = 0, $id_new = 0) {

        $trads = $this->getTranslationsCat($id_cat);

        $fieldsArray = array('title');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));

        echo ' <form action="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&id_news=' . $id_new . '&edit_save_cat=' . $id_cat . '" enctype="multipart/form-data" target="iframeOutNews" method="post" name="form_edit_cat" class="form_edit_cat"  >';
        foreach ($languages as $language) {
            echo "<div class='cat_edit_option'><img src='../img/l/" . $language['id_lang'] . ".jpg'><input type='text' name='cat_edit_" . $language['id_lang'] . "' value='" . $trads[$language['id_lang']][$fieldsArray[0]] . "' style='width:130px;' ></div>";
        }
        echo '<a  class="right cat_options" href="javascript:if(save_edit_cat(\'' . $this->l('The translation in language default is empty  ') . ' [' . strtoupper(Language::getIsoById($defaultLanguage)) . ']\')){ document.form_edit_cat.submit();}">
                             <img src="../img/admin/arrow-right.png"  class="saveCat">
                   </a>
                 </form> ';
    }

    /*
     *
     *
     *
     */

    private function cat_save_edit($id_cat = 0, $id_new = 0) {


        $fieldsArray = array('title');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));

        // if the default laguege cam empty
        if (empty($_POST['cat_edit_' . (int) ($defaultLanguage)])) {
            exit;
        }
        foreach ($languages as $language) {

            $query = 'SELECT count(id_cat) AS total FROM `' . _DB_PREFIX_ . 'news_cats_lang`
                            WHERE id_cat="' . intval($id_cat) . '" AND id_lang="' . ((int) ($language['id_lang'])) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

            if (intval($rs[0]['total']) <= 0) {

                Db::getInstance()->Execute(' INSERT INTO `' . _DB_PREFIX_ . 'news_cats_lang`
                               (  `id_cat`, `id_lang`, `' . $fieldsArray[0] . '`)
                            VALUES
                                ( "' . $id_cat . '", ' . $language['id_lang'] . ',"' . pSQL($_POST['cat_edit_' . (int) ($language['id_lang'])]) . '" );');
            } else {

                Db::getInstance()->Execute('  UPDATE `' . _DB_PREFIX_ . 'news_cats_lang`  SET
                                   `' . $fieldsArray[0] . '`= "' . pSQL($_POST['cat_edit_' . (int) ($language['id_lang'])]) . '"
                                WHERE  id_cat="' . intval($id_cat) . '" AND id_lang="' . ((int) ($language['id_lang'])) . '" ');
            }
        }

        echo '<script> parent.news_ajax("newsCatContent","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_list_cat=1&id_news=' . $id_new . '");</script>';

        exit;
    }

    /*
     *
     *  TAGs -----------------------
     *
     */

    private function tag_save_edit($id_tag = 0, $id_new = 0) {


        $fieldsArray = array('tag');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));

        // if the default laguege cam empty
        if (empty($_POST['tag_edit_' . (int) ($defaultLanguage)])) {
            exit;
        }
        foreach ($languages as $language) {

            $query = 'SELECT count(id_tag) AS total FROM `' . _DB_PREFIX_ . 'news_tag_lang`
                            WHERE id_tag="' . intval($id_tag) . '" AND id_lang="' . ((int) ($language['id_lang'])) . '"  ; ';
            $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

            if (intval($rs[0]['total']) <= 0) {

                Db::getInstance()->Execute(' INSERT INTO `' . _DB_PREFIX_ . 'news_tag_lang`
                               (  `id_tag`, `id_lang`, `' . $fieldsArray[0] . '`)
                            VALUES
                                ( "' . $id_tag . '", ' . $language['id_lang'] . ',"' . pSQL($_POST['tag_edit_' . (int) ($language['id_lang'])]) . '" );');
            } else {

                Db::getInstance()->Execute('  UPDATE `' . _DB_PREFIX_ . 'news_tag_lang`  SET
                                   `' . $fieldsArray[0] . '`= "' . pSQL($_POST['tag_edit_' . (int) ($language['id_lang'])]) . '"
                                WHERE  id_tag="' . intval($id_tag) . '" AND id_lang="' . ((int) ($language['id_lang'])) . '" ');
            }
        }

        echo '<script> parent.news_ajax("newsTagsContent","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_list_tags=1&id_news=' . $id_new . '");</script>';

        exit;
    }

    /*
     *
     *
     *
     */

    private function tags_edit($id_tag = 0, $id_new = 0) {

        $trads = $this->getTranslationsTag($id_tag);

        $fieldsArray = array('tag');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));

        echo ' <form action="?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&id_news=' . $id_new . '&edit_save_tag=' . $id_tag . '" enctype="multipart/form-data" target="iframeOutNews" method="post" name="form_edit_tag" class="form_edit_tag"  >';
        foreach ($languages as $language) {
            echo "<div class='tag_edit_option'><img src='../img/l/" . $language['id_lang'] . ".jpg'><input type='text' name='tag_edit_" . $language['id_lang'] . "' value='" . $trads[$language['id_lang']][$fieldsArray[0]] . "' style='width:130px;' ></div>";
        }
        echo '<a  class="right tag_options" href="javascript:if(save_edit_tag(\'' . $this->l('The translation in language default is empty  ') . ' [' . strtoupper(Language::getIsoById($defaultLanguage)) . ']\')){ document.form_edit_tag.submit();}">
                             <img src="../img/admin/arrow-right.png"  class="saveTag">
                   </a>
                 </form> ';
    }

    /*
     *
     *
     *
     */

    private function tags_delete($id_tag = 0) {

        $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_tag_rel where id_tag="' . $id_tag . '" ';
        $rs = Db::getInstance()->Execute($query);
        $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_tag_lang where id_tag="' . $id_tag . '" ';
        $rs = Db::getInstance()->Execute($query);
        echo "<script>delete_tag(" . $id_tag . ")</script>";
    }

    /*
     *
     *
     *
     */

    private function tags_add($id_new = 0) {

        $query = 'SELECT max(`id_tag`) AS total FROM `' . _DB_PREFIX_ . 'news_tag_lang`  ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $id_tag = intval($rs[0]['total']) + 1;

        $fieldsArray = array('tag');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));

        // if the default laguege cam empty
        if (empty($_POST['body_' . $fieldsArray[0] . '_' . (int) ($defaultLanguage)])) {
            exit;
        }
        foreach ($languages as $language) {
            $fields[$language['id_lang']]['id_lang'] = (int) ($language['id_lang']);
            Db::getInstance()->Execute('
                           INSERT INTO `' . _DB_PREFIX_ . 'news_tag_lang`(
                                       `id_tag`, `id_lang`, `' . $fieldsArray[0] . '`)
                            VALUES( "' . $id_tag . '", ' . $language['id_lang'] . ',
                                     "' . pSQL((!empty($_POST['body_' . $fieldsArray[0] . '_' . (int) ($language['id_lang'])]) ?
                                    $_POST['body_' . $fieldsArray[0] . '_' . (int) ($language['id_lang'])] :
                                    $_POST['body_' . $fieldsArray[0] . '_' . (int) ($defaultLanguage)]), true) . '"
                                )');
        }


        echo '<script> parent.news_ajax("newsTagsContent","?tab=AdminModules&configure=' . $this->name . '&token=' . $_REQUEST['token'] . '&news_ajax=1&news_list_tags=1&id_news=' . $id_new . '");
					   parent.add_remove_loading_tag();</script>';
        // add tag to new
        if ($id_new > 0) {
            $this->tags_addRemove($id_tag, $id_new);
        }
        exit;
    }

    /*
     *
     *
     *
     */

    private function tags_addRemove($id_tag = 0, $id_new = 0) {

        $query = 'SELECT * FROM ' . _DB_PREFIX_ . 'news_tag_rel where id_new="' . $id_new . '" AND id_tag="' . $id_tag . '" ';

        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $total = count($rs);
        if ($total > 0) {
            $query = 'DELETE FROM ' . _DB_PREFIX_ . 'news_tag_rel where id_new="' . $id_new . '" AND id_tag="' . $id_tag . '" ';
            $rs = Db::getInstance()->Execute($query);
            echo "<script>checkbox_tag('r'," . $id_tag . ")</script>";
        } else {
            $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news_tag_rel (`id_tag`,`id_new`)  VALUES("' . $id_tag . '", "' . $id_new . '" ); ';
            $rs = Db::getInstance()->Execute($query);
            echo "<script>parent.checkbox_tag('a'," . $id_tag . ")</script>";
        }
    }

    /*
     *
     *
     *
     */

    private function tags_list($id_new = 0) {

        $id_lang = (int) (Configuration::get('PS_LANG_DEFAULT'));
        $all_tags = $this->getTags(0, $id_lang);

        $tags_in_new = Array();
        if ($id_new > 0) {
            $tags = $this->getTags($id_new, $id_lang);
            foreach ($tags AS $key => $value) {
                $tags_in_new[] = $value->id;
            }
        }
        $i = 0;
        if ($all_tags) {
            foreach ($all_tags AS $key => $value) {
                echo "<div id='list_tag_" . $value->id . "' class='tag_options'>
                         <input type='checkbox' class='check_tag' id='check_tag_" . $value->id . "' " . (in_array($value->id, $tags_in_new) ? "checked='checked'" : '') . "
                         onclick=\"news_ajax('newsAjaxOut','?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&news_add_tags=" . $value->id . "&id_news=" . $id_new . "');\" >
                        <div class='tag_title'>
                                " . $value->tag . "
                        </div>
                         <a class='tag_edit_img' id='tag_edit_img_" . $value->id . "' href=\"javascript:void(0);\" onclick=\"edit_tag('?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&edit_tag=" . $value->id . "&id_news=" . $id_new . "'," . $value->id . ");\">
                                    <img src='../img/admin/edit.gif' class='editTag' >
                        </a>
                        <a href=\"javascript:void(0);\" class='confirm_delete_tag'
                         onclick=\"confirm_delete_tag('" . $this->l('Do you want delete this tag from ALL NEWS?') . "','?tab=AdminModules&configure=" . $this->name . "&token=" . $_REQUEST['token'] . "&news_ajax=1&news_delete_tags=" . $value->id . "&id_news=" . $id_new . "'," . $value->id . ");\">
                                    <img src='../img/admin/delete.gif' class='removeTag' id='tag_img_" . $value->id . "'>
                        </a>
                   </div> ";
                $i++;
            }
        }
        if ($i == 0) {
            echo "<div style='display:block;padding:20px;font-size: 11px;color: #400;text-align:center;' >
                                    <img src='../img/admin/warning.gif'><br>
                                    " . $this->l('No Tags') . "
                              </div>";
        }
    }

    /*
     *
     *
     *
     */

    private function deleteNews($id_new = 0) {

        Db::getInstance()->Execute('DELETE FROM `' . _DB_PREFIX_ . 'news_cats_rel` WHERE id_new="' . intval($id_new) . '"   ');

        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('SELECT pos  FROM `' . _DB_PREFIX_ . 'news`  WHERE id_news="' . intval($id_new) . '"  ; ');
        if (!isset($rs[0]['pos'])) {
            return false;
        }

        $this->incNews(intval($rs[0]['pos']), $id_new);


        Db::getInstance()->Execute('DELETE FROM `' . _DB_PREFIX_ . 'news` WHERE id_news="' . intval($id_new) . '" ;  ');
        Db::getInstance()->Execute('DELETE FROM `' . _DB_PREFIX_ . 'news_cats_rel`   WHERE id_new="' . intval($id_new) . '"  ; ');
        Db::getInstance()->Execute('DELETE FROM `' . _DB_PREFIX_ . 'news_imgs_rel`   WHERE id_news="' . intval($id_new) . '"  ; ');
        Db::getInstance()->Execute('DELETE FROM `' . _DB_PREFIX_ . 'news_langs`   WHERE id_news="' . intval($id_new) . '"  ; ');
        Db::getInstance()->Execute('DELETE FROM `' . _DB_PREFIX_ . 'news_products`   WHERE id_news="' . intval($id_new) . '"  ; ');
        Db::getInstance()->Execute('DELETE FROM `' . _DB_PREFIX_ . 'news_rel`   WHERE id_news="' . intval($id_new) . '"  ; ');
        Db::getInstance()->Execute('DELETE FROM `' . _DB_PREFIX_ . 'news_tag_rel`   WHERE id_new="' . intval($id_new) . '"  ; ');

        $this->msg_ok($this->l('Successfully deleted'));
    }

    /*
     *
     *
     *
     */

    private function create_new_backup() {

        $query = 'UPDATE ' . _DB_PREFIX_ . 'news SET pos = pos+1
                WHERE pos > ' . 0 . '  ';
        Db::getInstance()->Execute($query);

        $query = 'INSERT INTO ' . _DB_PREFIX_ . 'news (`autor`,`active`,`pos`,`date`)  VALUES("","0","1","' . time() . '" ); ';
        $rs = Db::getInstance()->Execute($query);

        $query = 'SELECT id_news FROM `' . _DB_PREFIX_ . 'news` WHERE pos="1" ; ';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        return intval($rs[0]['id_news']);
    }

    /*
     *
     *
     *
     *
     *
     */

    private function getNews($start = 0, $total = 0) {
        $extra = '';

        if ($start >= 0 && $total > 0) {
            $extra = " LIMIT $start, $total ";
        }
        $query = 'SELECT * FROM ' . _DB_PREFIX_ . 'news ORDER by pos ASC ' . $extra . ' ';

        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);
        if (isset($rs)) {
            return $rs;
        }
        return Array();
    }

    /*
     *
     *
     *
     *
     *
     */

    private function incNews($pos = 1, $id_news = 0) {

        $query = 'UPDATE ' . _DB_PREFIX_ . 'news SET pos = pos-1
                WHERE pos > ' . $pos . '  ';
        Db::getInstance()->Execute($query);
    }

    /*
     *
     *
     *
     *
     */

    private function up($pos = 1) {

        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('SELECT count(pos) AS total FROM `' . _DB_PREFIX_ . 'news` ');

        if ($pos != 0) {
            Db::getInstance()->Execute(' UPDATE ' . _DB_PREFIX_ . 'news SET pos = -1
                WHERE pos = ' . ($pos - 1) . '  ');
            Db::getInstance()->Execute(' UPDATE ' . _DB_PREFIX_ . 'news SET pos = pos-1
                WHERE pos = ' . $pos . ' ');
            Db::getInstance()->Execute(' UPDATE ' . _DB_PREFIX_ . 'news SET pos = ' . $pos . '
                WHERE pos = -1');
        }
    }

    /*
     *
     *
     *
     *
     */

    private function down($pos = 1) {

        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('SELECT count(pos) AS total FROM `' . _DB_PREFIX_ . 'news` ');
        $inc = $rs[0]['total'];
        if ($pos <= ($inc - 1)) {
            Db::getInstance()->Execute(' UPDATE ' . _DB_PREFIX_ . 'news SET pos = -1
                WHERE pos = ' . ($pos + 1) . '  ');
            Db::getInstance()->Execute(' UPDATE ' . _DB_PREFIX_ . 'news SET pos = pos+1
                WHERE pos = ' . $pos . '  ');
            Db::getInstance()->Execute(' UPDATE ' . _DB_PREFIX_ . 'news SET pos = ' . $pos . '
                WHERE pos = -1  ');
        }
    }

    /*
     *
     *
     *
     *
     */

    private function active($status = 0, $id_news = 0) {


        Db::getInstance()->Execute(' UPDATE ' . _DB_PREFIX_ . 'news SET active =
                "' . ( $status == '0' ? 0 : 1 ) . '"
                WHERE id_news = "' . $id_news . '"  ;');
    }

    /*
     *
     *
     */

    private function deleteDraft($id_new = 0) {
        if ($id_new > 0) {
            $this->deleteNews($id_new);
        }
    }

    // GLOBAL Methods -----------------------------------------

    /*
     *
     *
     *
     *
     */

    private function getTranslationsTag($id_tag = 0) {


        $fieldsArray = array('tag');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        foreach ($languages as $language) {
            $fields[$language['id_lang']]['id_lang'] = (int) ($language['id_lang']);
            foreach ($fieldsArray as $field) {
                $query = 'SELECT `' . $field . '`
                FROM `' . _DB_PREFIX_ . 'news_tag_lang`
                WHERE `id_lang` = "' . $language['id_lang'] . '" AND id_tag ="' . $id_tag . '";';
                $query = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

                $fields[$language['id_lang']][$field] = (isset($query[0][$field]) ? $query[0][$field] : '');
            }
        }
        return $fields;
    }

    /*
     *
     *
     *
     *
     */

    private function getTranslationsCat($id_cat = 0) {


        $fieldsArray = array('title');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        foreach ($languages as $language) {
            $fields[$language['id_lang']]['id_lang'] = (int) ($language['id_lang']);
            foreach ($fieldsArray as $field) {
                $query = 'SELECT `' . $field . '`
                    FROM `' . _DB_PREFIX_ . 'news_cats_lang`
                    WHERE `id_lang` = "' . $language['id_lang'] . '" AND id_cat ="' . $id_cat . '";
                    ';
                $query = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

                $fields[$language['id_lang']][$field] = (isset($query[0][$field]) ? $query[0][$field] : '');
            }
        }
        return $fields;
    }

    /*
     *
     *
     *
     *
     */

    private function getTranslations($id_news = 0) {

        $fieldsArray = array('title', 'new', 'description', 'keywords');
        $fields = array();
        $languages = Language::getLanguages(false);
        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        foreach ($languages as $language) {
            $fields[$language['id_lang']]['id_lang'] = (int) ($language['id_lang']);
            foreach ($fieldsArray as $field) {
                $query = 'SELECT `' . $field . '`
        FROM `' . _DB_PREFIX_ . 'news_langs`
        WHERE  `id_news` = "' . $id_news . '" AND
              `id_lang` = "' . $language['id_lang'] . '" ;
        ';
                $query = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

                $fields[$language['id_lang']][$field] = (isset($query[0][$field]) ? $query[0][$field] : '');
            }
        }
        return $fields;
    }

    // Front Methods -----------------------------------------

    private function rss($params) {
        global $cookie;

        header("Content-Type:text/xml; charset=utf-8");

        $defaultLanguage = (int) (Configuration::get('PS_LANG_DEFAULT'));
        $id_lang = (int) ($params['cookie']->id_lang);

        $rss_per_page = (int) Configuration::get('NEWS_RSS_N');

        $news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
			SELECT id_news FROM ' . _DB_PREFIX_ . 'news  WHERE
                 active="1" 
            ORDER by date ASC LIMIT ' . $rss_per_page . '; ');

        $newsObj = array();
        if ($news) {
            foreach ($news AS $new) {
                $obj = (object) 'News';
                $obj->id_news = (int) ($new['id_news']);
                $trads = $this->getTranslations((int) ($new['id_news']));
                $obj->title = $trads[$id_lang]['title'];
                $obj->rewrite = Tools::str2url($trads[$id_lang]['title']);
                $obj->new = strip_tags($trads[$id_lang]['new']);
                $obj->img = '';
                // get images
                $img = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                    SELECT a.id_img  FROM ' . _DB_PREFIX_ . 'news_imgs a
                        LEFT JOIN `' . _DB_PREFIX_ . 'news_imgs_rel` b ON (a.`id_img` = b.`id_img`)
                    WHERE a.id_img IN ( SELECT id_img FROM ' . _DB_PREFIX_ . 'news_imgs_rel WHERE
                                              id_news = ' . (int) ($new['id_news']) . ' ORDER BY pos DESC)
                    ORDER BY b.pos ASC LIMIT 1 ;  ');

                if (isset($img[0]['id_img'])) {
                    if (intval($img[0]['id_img']) > 0) {
                        if (file_exists($this->path_to_module . '/imgs/' . $img[0]['id_img'] . '-sides.' . $this->_imageType)) {
                            $obj->img = $this->url_to_module . '/imgs/' . $img[0]['id_img'] . '-sides.' . $this->_imageType;
                        }
                    }
                }
                $newsObj[] = $obj;
            }
        }



        $this->smarty->assign(array(
            'newsObj' => $newsObj,
            'shopName' => Configuration::get('PS_SHOP_NAME'),
            'shopUrl' => _PS_BASE_URL_ . __PS_BASE_URI__,
            'shopEmail' => Configuration::get('PS_SHOP_EMAIL'),
            'lang' => Language::getIsoById((int) ($cookie->id_lang))
        ));

        echo $this->display(__FILE__, 'tpl/news_rss.tpl');

        exit;
    }

    /*
     *
     *
     *
     *
     *
     */

    private function newsItem($params) {

        global $cookie, $link;



        $id_lang = (int) ($params['cookie']->id_lang);
        $id_news = intval(Tools::getValue('id_news'));


        $page = (Tools::getValue('page_cat') ? intval(Tools::getValue('page_cat')) : 0);
        $tag = (Tools::getValue('tag_news') ? intval(Tools::getValue('tag_news')) : 0);
        $cat = (Tools::getValue('cat_news') ? intval(Tools::getValue('cat_news')) : 0);
        $search_news = trim(Tools::getValue('search_news', ''));

        // get prev and next news
        $next_id_news = 0;
        $prev_id_news = 0;

        if (empty($search_news) && $tag == 0) {
            if ($cat > 0) {
                $extraQuery = ' AND id_news IN (
                               SELECT DISTINCT(id_new) AS id_news FROM ' . _DB_PREFIX_ . 'news_cats_rel  WHERE id_cat ="' . $cat . '" ) ';
            } else {
                $extraQuery = ' AND id_news IN (
                               SELECT id_news FROM ' . _DB_PREFIX_ . 'news_langs  WHERE (title like "%' . Search::sanitize($search_news, (int) $id_lang) . '%"
                               OR new like "%' . Search::sanitize($search_news, (int) $id_lang) . '%")  AND
                                id_lang = ' . (int) ($params['cookie']->id_lang) . ' )';
            }

            $news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                SELECT id_news FROM ' . _DB_PREFIX_ . 'news  WHERE
                     active="1" ' . $extraQuery . '
                ORDER by pos ASC ');

            for ($i = 0; $i < count($news); $i++) {
                if ($news[$i]['id_news'] == $id_news) {
                    if ($i > 0) {
                        $prev_id_news = $news[$i - 1]['id_news'];
                    }
                    if (count($news) > ($i + 1)) {
                        $next_id_news = $news[$i + 1]['id_news'];
                    }
                }
            }
        }

        //------------------

        $news = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
			SELECT * FROM ' . _DB_PREFIX_ . 'news  WHERE
                id_news = "' . $id_news . '" AND active ="1"
                AND id_news IN ( SELECT id_news FROM ' . _DB_PREFIX_ . 'news_langs
                    WHERE id_lang=' . $id_lang . ' AND
                        id_news = "' . $id_news . '") AND active="1" ;');

        if (!$news) {
            Tools::redirectLink($link->getPageLink('news.php', true));
            exit;
        }


        $trads = $this->getTranslations($id_news);
        $title = $trads[$id_lang]['title'];
        $new = $trads[$id_lang]['new'];

        // get images
        $img_rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                    SELECT distinct(a.id_img)  FROM ' . _DB_PREFIX_ . 'news_imgs a
                        LEFT JOIN `' . _DB_PREFIX_ . 'news_imgs_rel` b ON (a.`id_img` = b.`id_img`)
                    WHERE a.id_img IN ( SELECT id_img FROM ' . _DB_PREFIX_ . 'news_imgs_rel WHERE
                                              id_news = ' . $id_news . ' ORDER BY pos DESC)
                   ORDER BY b.pos ;  ');

        $imgsObj = array();
        if ($img_rs) {
            foreach ($img_rs AS $img) {
                if (isset($img['id_img'])) {
                    if (intval($img['id_img']) > 0) {
                        if (file_exists($this->path_to_module . '/imgs/' . $img['id_img'] . '.' . $this->_imageType)) {
                            $obj = (object) 'Img';
                            $obj->img = $this->url_to_module . '/imgs/' . $img['id_img'] . '.' . $this->_imageType;
                            $obj->img_slider = $this->url_to_module . '/imgs/' . $img['id_img'] . '-slider.' . $this->_imageType;
                            $obj->img_thumbnail = $this->url_to_module . '/imgs/' . $img['id_img'] . '-thumbnail.' . $this->_imageType;
                            $imgsObj[] = $obj;
                        }
                    }
                }
            }
        }

        if (Configuration::get('NEWS_FB_COMMENTS') == '1') {
            $news_fb_comments_langs = unserialize(Configuration::get('NEWS_FB_COMMENTS_LANGS'));
        }

		$date = (isset($news[0]['date']) ? ( $this->_months[date('n', $news[0]['date'])] . ' ' . date('j', $news[0]['date']) . ',' . date('Y', $news[0]['date']) ) : '');

        $this->smarty->assign(array(
            'imgsObj' => $imgsObj,
            'tagsObj' => $this->getTags($id_news, $id_lang),
            'newsProductsObj' => (Configuration::get('NEWS_REL_PRODUCTS') ? $this->relProducts($params, $id_news) : Array()),
            'relNewsObj' => (intval(Configuration::get('NEWS_REL')) > 0 ? $this->getRelNews($id_news, $id_lang) : 0),
            'id_news' => $id_news,
            'autor' => (isset($news[0]['autor']) ? $news[0]['autor'] : ''),
            'date' => $date, //May 30, 2012
            'title' => $title,
            'url_to_module' => $this->url_to_module,
            'new' => $new,
            'search_news' => $search_news,
            'tag' => $tag,
            'cat' => $cat,
            'cat_rewrite' => $this->getCatRewrite($cat, $id_lang),
            'rewrite' => Tools::str2url($title),
            'page' => $page,
            'fbComments' => Configuration::get('NEWS_FB_COMMENTS'),
            'fbCommentsLang' => isset($news_fb_comments_langs[(int) ($cookie->id_lang)]) ? $news_fb_comments_langs[(int) ($cookie->id_lang)] : 'en_US',
            'socialButtons' => unserialize(Configuration::get('NEWS_SOCIAL_BUTTONS')),
            'socialButtonHtml' => html_entity_decode(Configuration::get('NEWS_SOCIAL_BUTTON_HTML')),
            'newsWidth' => Configuration::get('NEWS_WIDTH'),
            'news_slideshow_width' => intval(Configuration::get('NEWS_SLIDESHOW_WIDTH')),
            'news_slideshow_height' => intval(Configuration::get('NEWS_SLIDESHOW_HEIGHT')),
            'prev_id_news' => $prev_id_news,
            'next_id_news' => $next_id_news,

        ));

        return $this->display(__FILE__, 'tpl/themes/' . Configuration::get('NEWS_THEME') . '/new_item.tpl');
    }

    /*
     *
     *
     *
     *
     */

    private function getRelNews($id_new = 0, $id_lang = 1) {

        global $cookie;

        $news_rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS('
                    SELECT a.id_news_rel AS id_new, b.date  FROM
                            ' . _DB_PREFIX_ . 'news_rel a,
                            ' . _DB_PREFIX_ . 'news b
                    WHERE  a.id_news = "' . $id_new . '" AND a.id_news_rel=b.id_news AND b.active="1" ORDER BY b.date DESC
                    LIMIT ' . intval(Configuration::get('NEWS_REL')) . '  ;  ');

        $relNewsObj = array();
        if ($news_rs) {
            foreach ($news_rs AS $new) {
                $trads = $this->getTranslations($new['id_new']);
                if (isset($trads[$id_lang]['title']) && !empty($trads[$id_lang]['title'])) {
                    $obj = (object) 'Rel';
                    $obj->id = $new['id_new'];
                    $obj->title = $trads[$id_lang]['title'];
                    $obj->rewrite = Tools::str2url($trads[$id_lang]['title']);
                    $obj->date = date('d/m/Y', $new['date']);
                    $relNewsObj[] = $obj;
                }
            }
        }
        return $relNewsObj;
    }

    /*
     *
     *
     *
     *
     */

    private function getCats($id_new = 0, $id_lang = 1) {

        global $cookie;
        if ($id_new != 0) {
            $query = 'SELECT id_cat  FROM ' . _DB_PREFIX_ . 'news_cats_rel WHERE id_new = "' . $id_new . '" ';
        } else {
            $query = 'SELECT id_cat FROM ' . _DB_PREFIX_ . 'news_cats  ORDER BY pos ASC  ;  ';
        }
        $cats_rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $catsObj = array();
        if ($cats_rs) {
            foreach ($cats_rs AS $new) {
                $trads = $this->getTranslationsCat($new['id_cat']);
                if (isset($trads[$id_lang]['title']) && !empty($trads[$id_lang]['title'])) {
                    $obj = (object) 'Cat';
                    $obj->id = $new['id_cat'];
                    $obj->title = $trads[$id_lang]['title'];
                    $obj->rewrite = Tools::str2url($trads[$id_lang]['title']);
                    $catsObj [] = $obj;
                }
            }
        }
        return $catsObj;
    }

    /*
     *
     *
     *
     *
     */
	 
	private function getCatName($id_cat = 0, $id_lang = 1) {


        $trads = $this->getTranslationsCat($id_cat);
        if (isset($trads[$id_lang]['title']) && !empty($trads[$id_lang]['title'])) {
            return $trads[$id_lang]['title'];
        }

        return '';
    } 

    private function getCatRewrite($id_cat = 0, $id_lang = 1) {


        $trads = $this->getTranslationsCat($id_cat);
        if (isset($trads[$id_lang]['title']) && !empty($trads[$id_lang]['title'])) {
            return Tools::str2url($trads[$id_lang]['title']);
        }

        return '';
    }

    /*
     *
     *
     *
     *
     */

    private function getTags($id_new = 0, $id_lang = 1) {

        global $cookie;
        if ($id_new != 0) {
            $query = 'SELECT id_tag  FROM ' . _DB_PREFIX_ . 'news_tag_rel WHERE id_new = "' . $id_new . '" ';
        } else {
            $query = 'SELECT DISTINCT(id_tag)  FROM ' . _DB_PREFIX_ . 'news_tag_lang ORDER by tag ASC  ';
        }

        $tag_rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        $tagObj = array();
        if ($tag_rs) {
            foreach ($tag_rs AS $tag) {
                $trad = $this->getTranslationsTag($tag['id_tag']);
                if (isset($trad[$id_lang]['tag']) && !empty($trad[$id_lang]['tag'])) {
                    $obj = (object) 'Tag';
                    $obj->id = $tag['id_tag'];
                    $obj->tag = $trad[$id_lang]['tag'];
                    $tagObj[] = $obj;
                }
            }
        }
        return $tagObj;
    }

    /*
     *
     *
     *
     *
     */

    private function relProducts($params, $id_new = 0) {
        global $link, $cookie, $js_files;


        $list_products_rel = $this->getProductsRel(intval($id_new));

        $context = Context::getContext();
        $front = true;
        if (!in_array($context->controller->controller_type, array('front', 'modulefront')))
            $front = false;



        if (count($list_products_rel) <= 0) {
            return Array();
        }

        $query = 'SELECT i.id_image, p.*, t.`rate` AS tax_rate, il.legend, p.active,
            stock.out_of_stock, IFNULL(stock.quantity, 0) as quantity,
            product_attribute_shop.`id_product_attribute`,
            pl.name, pl.description_short, pl.link_rewrite, cl.link_rewrite AS category_rewrite
			FROM ' . _DB_PREFIX_ . 'product p
			LEFT JOIN ' . _DB_PREFIX_ . 'product_lang pl ON (pl.id_product = p.id_product)
			LEFT JOIN ' . _DB_PREFIX_ . 'image i ON (i.id_product = p.id_product AND i.cover = 1)
			LEFT JOIN ' . _DB_PREFIX_ . 'image_lang il ON (il.id_image = i.id_image)
            LEFT JOIN ' . _DB_PREFIX_ . 'tax_rule tr ON (p.`id_tax_rules_group` = tr.`id_tax_rules_group`
                                AND tr.`id_country` = ' . (int) $context->country->id . '
                                AND tr.`id_state` = 0 )
            LEFT JOIN ' . _DB_PREFIX_ . 'tax t ON (t.`id_tax` = tr.`id_tax`)
			LEFT JOIN ' . _DB_PREFIX_ . 'category_lang cl ON (cl.id_category = p.id_category_default)
            LEFT JOIN `' . _DB_PREFIX_ . 'product_attribute` pa ON (p.`id_product` = pa.`id_product`)
			' . Shop::addSqlAssociation('product_attribute', 'pa', false, 'product_attribute_shop.`default_on` = 1') . '
            ' . Product::sqlStock('p', 'product_attribute_shop', false, $context->shop) . '
			WHERE p.id_product IN (' . implode(',', $list_products_rel) . ')
			AND pl.id_lang = ' . (int) ($params['cookie']->id_lang) . '
			AND cl.id_lang = ' . (int) ($params['cookie']->id_lang);
        $productsImages = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);


        $productsImagesArray = array();
        if ($productsImages) {
            foreach ($productsImages AS $pi) {
                $productsImagesArray[$pi['id_product']] = $pi;
            }
        }

        $newsProductsObj = array();
        if ($list_products_rel) {
            foreach ($list_products_rel AS $product_RProducts_id) {
                $obj = (object) 'Product';
                if (!isset($productsImagesArray[$product_RProducts_id]) || (!$obj->active = $productsImagesArray[$product_RProducts_id]['active']))
                    continue;
                else {
                    $obj->id_product = (int) ($productsImagesArray[$product_RProducts_id]['id_product']);
                    $img_cover = $link->getImageLink($productsImagesArray[$product_RProducts_id]['link_rewrite'], (int) ($productsImagesArray[$product_RProducts_id]['id_product']) . '-' . (int) ($productsImagesArray[$product_RProducts_id]['id_image']), 'medium_default');


                    if (intval($productsImagesArray[$product_RProducts_id]['id_image']) <= 0) {
                        $img_cover = $link->getImageLink('', Language::getIsoById((int) ($params['cookie']->id_lang)) . '-default', 'medium_default');
                    }
                    $obj->cover = $img_cover;
                    $obj->name = $productsImagesArray[$product_RProducts_id]['name'];
                    $obj->description_short = $productsImagesArray[$product_RProducts_id]['description_short'];
                    $obj->show_price = ($productsImagesArray[$product_RProducts_id]['show_price'] == '1' ? true : false);
                    $currency = $context->currency;
                    $obj->price = Tools::convertPrice($productsImagesArray[$product_RProducts_id]['price'], $currency);
                    $obj->with_tax = (Product::$_taxCalculationMethod == PS_TAX_INC ? true : false);
                    $obj->price_tax = Product::getPriceStatic($productsImagesArray[$product_RProducts_id]['id_product'], true, NULL, 6);

                    $obj->link_rewrite = $productsImagesArray[$product_RProducts_id]['link_rewrite'];
                    $obj->category_rewrite = $productsImagesArray[$product_RProducts_id]['category_rewrite'];
                    $obj->allow_oosp = Product::isAvailableWhenOutOfStock($productsImagesArray[$product_RProducts_id]['out_of_stock']);

                    /* -------------------- */
                    if ((!isset($productsImagesArray[$product_RProducts_id]['id_product_attribute']) OR !$productsImagesArray[$product_RProducts_id]['id_product_attribute']) AND ((isset($productsImagesArray[$product_RProducts_id]['cache_default_attribute']) AND ($ipa_default = $productsImagesArray[$product_RProducts_id]['cache_default_attribute']) !== NULL) OR ($ipa_default = Product::getDefaultAttribute($productsImagesArray[$product_RProducts_id]['id_product'], !$obj->allow_oosp)))
                    ) {
                        $productsImagesArray[$product_RProducts_id]['id_product_attribute'] = $ipa_default;
                    }
                    if (!isset($productsImagesArray[$product_RProducts_id]['id_product_attribute']))
                        $productsImagesArray[$product_RProducts_id]['id_product_attribute'] = 0;

                    $obj->id_product_attribute = $productsImagesArray[$product_RProducts_id]['id_product_attribute'];
                    $obj->available_for_order = $productsImagesArray[$product_RProducts_id]['available_for_order'];
                    $obj->minimal_quantity = $productsImagesArray[$product_RProducts_id]['minimal_quantity'];
                    $obj->customizable = $productsImagesArray[$product_RProducts_id]['customizable'];
                    $obj->quantity = $productsImagesArray[$product_RProducts_id]['quantity'];
                    /* ----------------------- */
                    $newsProductsObj[] = $obj;
                }
            }
        }

        if (!sizeof($newsProductsObj))
            return array();

        return $newsProductsObj;
    }

    /*
     *
     *
     *
     *
     */

    private function getProductsRel($id_new = 0) {
        $products_list = Array();

        $query = ' SELECT id_product FROM ' . _DB_PREFIX_ . 'news_products Where
                            id_news="' . $id_new . '" ORDER BY pos ASC ;';
        $rs = Db::getInstance(_PS_USE_SQL_SLAVE_)->ExecuteS($query);

        if ($rs) {
            foreach ($rs AS $products) {
                $products_list[] = $products['id_product'];
            }
        }
        return $products_list;
    }

    /*
     *
     */
}

?>